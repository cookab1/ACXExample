
ACXExample.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800200  00001010  000010a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001010  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000009d9  00800240  00800240  000010e4  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  000010e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001144  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  00001188  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b29  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001357  00000000  00000000  00003ef9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000183f  00000000  00000000  00005250  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000840  00000000  00000000  00006a90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c52  00000000  00000000  000072d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e95  00000000  00000000  00007f22  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00009db7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	3f c2       	rjmp	.+1150   	; 0x4d4 <__vector_21>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	c9 c6       	rjmp	.+3474   	; 0xdf8 <__vector_25>
      66:	00 00       	nop
      68:	0b c5       	rjmp	.+2582   	; 0xa80 <__vector_26>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	de c6       	rjmp	.+3516   	; 0xe4e <__vector_36>
      92:	00 00       	nop
      94:	41 c5       	rjmp	.+2690   	; 0xb18 <__vector_37>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	eb c6       	rjmp	.+3542   	; 0xea4 <__vector_51>
      ce:	00 00       	nop
      d0:	6f c5       	rjmp	.+2782   	; 0xbb0 <__vector_52>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	10 c7       	rjmp	.+3616   	; 0xefa <__vector_54>
      da:	00 00       	nop
      dc:	b5 c5       	rjmp	.+2922   	; 0xc48 <__vector_55>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 e1       	ldi	r30, 0x10	; 16
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 34       	cpi	r26, 0x40	; 64
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	2c e0       	ldi	r18, 0x0C	; 12
     110:	a0 e4       	ldi	r26, 0x40	; 64
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a9 31       	cpi	r26, 0x19	; 25
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	e7 d0       	rcall	.+462    	; 0x2ee <main>
     120:	75 c7       	rjmp	.+3818   	; 0x100c <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <x_yield>:
     124:	2f 92       	push	r2
     126:	3f 92       	push	r3
     128:	4f 92       	push	r4
     12a:	5f 92       	push	r5
     12c:	6f 92       	push	r6
     12e:	7f 92       	push	r7
     130:	8f 92       	push	r8
     132:	9f 92       	push	r9
     134:	af 92       	push	r10
     136:	bf 92       	push	r11
     138:	cf 92       	push	r12
     13a:	df 92       	push	r13
     13c:	ef 92       	push	r14
     13e:	ff 92       	push	r15
     140:	0f 93       	push	r16
     142:	1f 93       	push	r17
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	20 91 e4 03 	lds	r18, 0x03E4	; 0x8003e4 <x_thread_id>
     14c:	30 91 18 0c 	lds	r19, 0x0C18	; 0x800c18 <x_thread_mask>
     150:	f8 94       	cli
     152:	ed b6       	in	r14, 0x3d	; 61
     154:	fe b6       	in	r15, 0x3e	; 62
     156:	78 94       	sei
     158:	e6 ee       	ldi	r30, 0xE6	; 230
     15a:	f3 e0       	ldi	r31, 0x03	; 3
     15c:	22 0f       	add	r18, r18
     15e:	c0 e0       	ldi	r28, 0x00	; 0
     160:	d2 e0       	ldi	r29, 0x02	; 2
     162:	c2 0f       	add	r28, r18
     164:	d1 1d       	adc	r29, r1
     166:	19 91       	ld	r17, Y+
     168:	d8 81       	ld	r29, Y
     16a:	c1 2f       	mov	r28, r17
     16c:	18 81       	ld	r17, Y
     16e:	1a 3a       	cpi	r17, 0xAA	; 170
     170:	21 f0       	breq	.+8      	; 0x17a <x_yield+0x56>
     172:	80 91 e4 03 	lds	r24, 0x03E4	; 0x8003e4 <x_thread_id>
     176:	91 2d       	mov	r25, r1
     178:	f9 c1       	rjmp	.+1010   	; 0x56c <x_stack_overflow>
     17a:	22 0f       	add	r18, r18
     17c:	e2 0f       	add	r30, r18
     17e:	f1 1d       	adc	r31, r1
     180:	e1 92       	st	Z+, r14
     182:	f0 82       	st	Z, r15

00000184 <x_schedule>:
     184:	20 91 17 0c 	lds	r18, 0x0C17	; 0x800c17 <x_disable_status>
     188:	30 91 e5 03 	lds	r19, 0x03E5	; 0x8003e5 <x_delay_status>
     18c:	40 91 06 04 	lds	r20, 0x0406	; 0x800406 <x_suspend_status>
     190:	23 2b       	or	r18, r19
     192:	24 2b       	or	r18, r20
     194:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <x_thread_id>
     198:	40 91 18 0c 	lds	r20, 0x0C18	; 0x800c18 <x_thread_mask>
     19c:	68 e0       	ldi	r22, 0x08	; 8
     19e:	88 94       	clc
     1a0:	33 95       	inc	r19
     1a2:	37 70       	andi	r19, 0x07	; 7
     1a4:	44 1f       	adc	r20, r20
     1a6:	41 1d       	adc	r20, r1
     1a8:	74 2f       	mov	r23, r20
     1aa:	42 23       	and	r20, r18
     1ac:	19 f0       	breq	.+6      	; 0x1b4 <restore>
     1ae:	6a 95       	dec	r22
     1b0:	b9 f7       	brne	.-18     	; 0x1a0 <x_schedule+0x1c>
     1b2:	e8 cf       	rjmp	.-48     	; 0x184 <x_schedule>

000001b4 <restore>:
     1b4:	30 93 e4 03 	sts	0x03E4, r19	; 0x8003e4 <x_thread_id>
     1b8:	70 93 18 0c 	sts	0x0C18, r23	; 0x800c18 <x_thread_mask>
     1bc:	e6 ee       	ldi	r30, 0xE6	; 230
     1be:	f3 e0       	ldi	r31, 0x03	; 3
     1c0:	33 0f       	add	r19, r19
     1c2:	33 0f       	add	r19, r19
     1c4:	e3 0f       	add	r30, r19
     1c6:	f1 1d       	adc	r31, r1
     1c8:	21 91       	ld	r18, Z+
     1ca:	30 81       	ld	r19, Z
     1cc:	f8 94       	cli
     1ce:	2d bf       	out	0x3d, r18	; 61
     1d0:	3e bf       	out	0x3e, r19	; 62
     1d2:	78 94       	sei
     1d4:	df 91       	pop	r29
     1d6:	cf 91       	pop	r28
     1d8:	1f 91       	pop	r17
     1da:	0f 91       	pop	r16
     1dc:	ff 90       	pop	r15
     1de:	ef 90       	pop	r14
     1e0:	df 90       	pop	r13
     1e2:	cf 90       	pop	r12
     1e4:	bf 90       	pop	r11
     1e6:	af 90       	pop	r10
     1e8:	9f 90       	pop	r9
     1ea:	8f 90       	pop	r8
     1ec:	7f 90       	pop	r7
     1ee:	6f 90       	pop	r6
     1f0:	5f 90       	pop	r5
     1f2:	85 2d       	mov	r24, r5
     1f4:	4f 90       	pop	r4
     1f6:	94 2d       	mov	r25, r4
     1f8:	3f 90       	pop	r3
     1fa:	63 2d       	mov	r22, r3
     1fc:	2f 90       	pop	r2
     1fe:	72 2d       	mov	r23, r2
     200:	08 95       	ret

00000202 <bit2mask8>:
     202:	ee e0       	ldi	r30, 0x0E	; 14
     204:	f2 e0       	ldi	r31, 0x02	; 2
     206:	e8 0f       	add	r30, r24
     208:	f1 1d       	adc	r31, r1
     20a:	84 91       	lpm	r24, Z
     20c:	08 95       	ret

0000020e <bitmask8_table>:
     20e:	01 02       	muls	r16, r17
     210:	04 08       	sbc	r0, r4
     212:	10 20       	and	r1, r0
     214:	40 80       	ld	r4, Z

00000216 <thread0A>:
}

void thread0A() {
	while(1)
	{
		PORTB ^= 0x80;
     216:	85 b1       	in	r24, 0x05	; 5
     218:	80 58       	subi	r24, 0x80	; 128
     21a:	85 b9       	out	0x05, r24	; 5
		x_delay(100);
     21c:	84 e6       	ldi	r24, 0x64	; 100
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	43 d1       	rcall	.+646    	; 0x4a8 <x_delay>
     222:	f9 cf       	rjmp	.-14     	; 0x216 <thread0A>

00000224 <thread0B>:
	}
}
void thread0B() {
	while(1)
	{
		PORTB ^= 0x80;
     224:	85 b1       	in	r24, 0x05	; 5
     226:	80 58       	subi	r24, 0x80	; 128
     228:	85 b9       	out	0x05, r24	; 5
		x_delay(1000);
     22a:	88 ee       	ldi	r24, 0xE8	; 232
     22c:	93 e0       	ldi	r25, 0x03	; 3
     22e:	3c d1       	rcall	.+632    	; 0x4a8 <x_delay>
     230:	f9 cf       	rjmp	.-14     	; 0x224 <thread0B>

00000232 <thread1>:
	}
}

void thread1() {
	DDRK |= 0x01;
     232:	e7 e0       	ldi	r30, 0x07	; 7
     234:	f1 e0       	ldi	r31, 0x01	; 1
     236:	80 81       	ld	r24, Z
     238:	81 60       	ori	r24, 0x01	; 1
     23a:	80 83       	st	Z, r24
	while(1)
	{
		// run thread main
		PORTK ^= 0x01;
     23c:	c8 e0       	ldi	r28, 0x08	; 8
     23e:	d1 e0       	ldi	r29, 0x01	; 1
     240:	11 e0       	ldi	r17, 0x01	; 1
     242:	88 81       	ld	r24, Y
     244:	81 27       	eor	r24, r17
     246:	88 83       	st	Y, r24
		x_delay(100);
     248:	84 e6       	ldi	r24, 0x64	; 100
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	2d d1       	rcall	.+602    	; 0x4a8 <x_delay>
     24e:	f9 cf       	rjmp	.-14     	; 0x242 <thread1+0x10>

00000250 <thread2>:
	}
}

void thread2() {
	DDRK |= 0x02;
     250:	e7 e0       	ldi	r30, 0x07	; 7
     252:	f1 e0       	ldi	r31, 0x01	; 1
     254:	80 81       	ld	r24, Z
     256:	82 60       	ori	r24, 0x02	; 2
     258:	80 83       	st	Z, r24
	while(1)
	{
		// run thread main
		PORTK ^= 0x02;
     25a:	c8 e0       	ldi	r28, 0x08	; 8
     25c:	d1 e0       	ldi	r29, 0x01	; 1
     25e:	12 e0       	ldi	r17, 0x02	; 2
     260:	88 81       	ld	r24, Y
     262:	81 27       	eor	r24, r17
     264:	88 83       	st	Y, r24
		x_delay(200);
     266:	88 ec       	ldi	r24, 0xC8	; 200
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	1e d1       	rcall	.+572    	; 0x4a8 <x_delay>
     26c:	f9 cf       	rjmp	.-14     	; 0x260 <thread2+0x10>

0000026e <thread3>:
	}
}
void thread3() {
	DDRK |= 0x04;
     26e:	e7 e0       	ldi	r30, 0x07	; 7
     270:	f1 e0       	ldi	r31, 0x01	; 1
     272:	80 81       	ld	r24, Z
     274:	84 60       	ori	r24, 0x04	; 4
     276:	80 83       	st	Z, r24
	while(1)
	{
		// run thread main
		PORTK ^= 0x04;
     278:	c8 e0       	ldi	r28, 0x08	; 8
     27a:	d1 e0       	ldi	r29, 0x01	; 1
     27c:	14 e0       	ldi	r17, 0x04	; 4
     27e:	88 81       	ld	r24, Y
     280:	81 27       	eor	r24, r17
     282:	88 83       	st	Y, r24
		x_delay(300);
     284:	8c e2       	ldi	r24, 0x2C	; 44
     286:	91 e0       	ldi	r25, 0x01	; 1
     288:	0f d1       	rcall	.+542    	; 0x4a8 <x_delay>
     28a:	f9 cf       	rjmp	.-14     	; 0x27e <thread3+0x10>

0000028c <thread4>:
	}
}
void thread4() {
	DDRK |= 0x08;
     28c:	e7 e0       	ldi	r30, 0x07	; 7
     28e:	f1 e0       	ldi	r31, 0x01	; 1
     290:	80 81       	ld	r24, Z
     292:	88 60       	ori	r24, 0x08	; 8
     294:	80 83       	st	Z, r24
	while(1)
	{
		// run thread main
		PORTK ^= 0x08;
     296:	c8 e0       	ldi	r28, 0x08	; 8
     298:	d1 e0       	ldi	r29, 0x01	; 1
     29a:	18 e0       	ldi	r17, 0x08	; 8
     29c:	88 81       	ld	r24, Y
     29e:	81 27       	eor	r24, r17
     2a0:	88 83       	st	Y, r24
		x_new(0, thread0A, true);
     2a2:	41 e0       	ldi	r20, 0x01	; 1
     2a4:	6b e0       	ldi	r22, 0x0B	; 11
     2a6:	71 e0       	ldi	r23, 0x01	; 1
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	49 d0       	rcall	.+146    	; 0x33e <x_new>
		x_delay(4000);
     2ac:	80 ea       	ldi	r24, 0xA0	; 160
     2ae:	9f e0       	ldi	r25, 0x0F	; 15
     2b0:	fb d0       	rcall	.+502    	; 0x4a8 <x_delay>
		x_new(0, thread0B, true);
     2b2:	41 e0       	ldi	r20, 0x01	; 1
     2b4:	62 e1       	ldi	r22, 0x12	; 18
     2b6:	71 e0       	ldi	r23, 0x01	; 1
     2b8:	80 e0       	ldi	r24, 0x00	; 0
     2ba:	41 d0       	rcall	.+130    	; 0x33e <x_new>
		x_delay(4000);
     2bc:	80 ea       	ldi	r24, 0xA0	; 160
     2be:	9f e0       	ldi	r25, 0x0F	; 15
     2c0:	f3 d0       	rcall	.+486    	; 0x4a8 <x_delay>
     2c2:	ec cf       	rjmp	.-40     	; 0x29c <thread4+0x10>

000002c4 <helloThread>:
     2c4:	26 e0       	ldi	r18, 0x06	; 6
	}
}
void helloThread() {
	Serial_open(0, 115200L, SERIAL_8N1);
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	40 e0       	ldi	r20, 0x00	; 0
     2ca:	52 ec       	ldi	r21, 0xC2	; 194
     2cc:	61 e0       	ldi	r22, 0x01	; 1
     2ce:	70 e0       	ldi	r23, 0x00	; 0
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	2c d3       	rcall	.+1624   	; 0x92e <Serial_open>
	char *str = "Hello!\n";
	int c;
	while(1)
	{
		if((c = Serial_read(0)) > 0) {
     2d6:	80 e0       	ldi	r24, 0x00	; 0
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	02 d5       	rcall	.+2564   	; 0xce0 <Serial_read>
     2dc:	18 16       	cp	r1, r24
     2de:	19 06       	cpc	r1, r25
     2e0:	24 f4       	brge	.+8      	; 0x2ea <helloThread+0x26>
			Serial_write(0, c);
     2e2:	68 2f       	mov	r22, r24
     2e4:	80 e0       	ldi	r24, 0x00	; 0
     2e6:	90 e0       	ldi	r25, 0x00	; 0
		}
		x_yield();
     2e8:	33 d6       	rcall	.+3174   	; 0xf50 <Serial_write>
     2ea:	1c df       	rcall	.-456    	; 0x124 <x_yield>
	}
     2ec:	f4 cf       	rjmp	.-24     	; 0x2d6 <helloThread+0x12>

000002ee <main>:

void Serial_puts(uint8_t, char *);

int main(void)
{
	DDRK = 0x0f; // bits 0-3 are output
     2ee:	8f e0       	ldi	r24, 0x0F	; 15
     2f0:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
	PORTK = 0x00;  // clear to zero
     2f4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
	
	// after calling x_init(), the running thread is "thread 0"
	x_init();
     2f8:	60 d0       	rcall	.+192    	; 0x3ba <x_init>
	x_new(1, thread1, true);
     2fa:	41 e0       	ldi	r20, 0x01	; 1
     2fc:	69 e1       	ldi	r22, 0x19	; 25
     2fe:	71 e0       	ldi	r23, 0x01	; 1
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	1d d0       	rcall	.+58     	; 0x33e <x_new>
	x_new(2, thread2, true);
     304:	41 e0       	ldi	r20, 0x01	; 1
     306:	68 e2       	ldi	r22, 0x28	; 40
     308:	71 e0       	ldi	r23, 0x01	; 1
     30a:	82 e0       	ldi	r24, 0x02	; 2
     30c:	18 d0       	rcall	.+48     	; 0x33e <x_new>
	x_new(3, thread3, true);
     30e:	41 e0       	ldi	r20, 0x01	; 1
     310:	67 e3       	ldi	r22, 0x37	; 55
     312:	71 e0       	ldi	r23, 0x01	; 1
     314:	83 e0       	ldi	r24, 0x03	; 3
     316:	13 d0       	rcall	.+38     	; 0x33e <x_new>
	x_new(4, thread4, true);
     318:	41 e0       	ldi	r20, 0x01	; 1
     31a:	66 e4       	ldi	r22, 0x46	; 70
     31c:	71 e0       	ldi	r23, 0x01	; 1
     31e:	84 e0       	ldi	r24, 0x04	; 4
     320:	0e d0       	rcall	.+28     	; 0x33e <x_new>
	x_new(5, helloThread, true);
     322:	41 e0       	ldi	r20, 0x01	; 1
     324:	62 e6       	ldi	r22, 0x62	; 98
     326:	71 e0       	ldi	r23, 0x01	; 1
     328:	85 e0       	ldi	r24, 0x05	; 5
     32a:	09 d0       	rcall	.+18     	; 0x33e <x_new>
     32c:	80 e8       	ldi	r24, 0x80	; 128
	
	// We are thread 0 now
	DDRB = 0x80;
     32e:	84 b9       	out	0x04, r24	; 4
	
    /* Replace with your application code */
    while (1) 
    {
		PORTB ^= 0x80;
     330:	85 b1       	in	r24, 0x05	; 5
     332:	80 58       	subi	r24, 0x80	; 128
     334:	85 b9       	out	0x05, r24	; 5
		x_delay(100);
     336:	84 e6       	ldi	r24, 0x64	; 100
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	b6 d0       	rcall	.+364    	; 0x4a8 <x_delay>
     33c:	f9 cf       	rjmp	.-14     	; 0x330 <main+0x42>

0000033e <x_new>:
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	c8 2f       	mov	r28, r24
     344:	d4 2f       	mov	r29, r20
     346:	e8 2f       	mov	r30, r24
     348:	f0 e0       	ldi	r31, 0x00	; 0
     34a:	ee 0f       	add	r30, r30
     34c:	ff 1f       	adc	r31, r31
     34e:	ee 0f       	add	r30, r30
     350:	ff 1f       	adc	r31, r31
     352:	9f 01       	movw	r18, r30
     354:	2a 51       	subi	r18, 0x1A	; 26
     356:	3c 4f       	sbci	r19, 0xFC	; 252
     358:	f9 01       	movw	r30, r18
     35a:	a2 81       	ldd	r26, Z+2	; 0x02
     35c:	b3 81       	ldd	r27, Z+3	; 0x03
     35e:	6c 93       	st	X, r22
     360:	cd 01       	movw	r24, r26
     362:	01 97       	sbiw	r24, 0x01	; 1
     364:	fc 01       	movw	r30, r24
     366:	70 83       	st	Z, r23
     368:	01 97       	sbiw	r24, 0x01	; 1
     36a:	fc 01       	movw	r30, r24
     36c:	10 82       	st	Z, r1
     36e:	55 97       	sbiw	r26, 0x15	; 21
     370:	f9 01       	movw	r30, r18
     372:	b1 83       	std	Z+1, r27	; 0x01
     374:	a0 83       	st	Z, r26
     376:	8c 2f       	mov	r24, r28
     378:	44 df       	rcall	.-376    	; 0x202 <bit2mask8>
     37a:	dd 23       	and	r29, r29
     37c:	41 f0       	breq	.+16     	; 0x38e <x_new+0x50>
     37e:	98 2f       	mov	r25, r24
     380:	90 95       	com	r25
     382:	80 91 17 0c 	lds	r24, 0x0C17	; 0x800c17 <x_disable_status>
     386:	98 23       	and	r25, r24
     388:	90 93 17 0c 	sts	0x0C17, r25	; 0x800c17 <x_disable_status>
     38c:	05 c0       	rjmp	.+10     	; 0x398 <x_new+0x5a>
     38e:	90 91 17 0c 	lds	r25, 0x0C17	; 0x800c17 <x_disable_status>
     392:	98 2b       	or	r25, r24
     394:	90 93 17 0c 	sts	0x0C17, r25	; 0x800c17 <x_disable_status>
     398:	80 91 e4 03 	lds	r24, 0x03E4	; 0x8003e4 <x_thread_id>
     39c:	c8 13       	cpse	r28, r24
     39e:	01 c0       	rjmp	.+2      	; 0x3a2 <x_new+0x64>
     3a0:	f1 de       	rcall	.-542    	; 0x184 <x_schedule>
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <init_System_Timer>:
     3a8:	82 e0       	ldi	r24, 0x02	; 2
     3aa:	84 bd       	out	0x24, r24	; 36
     3ac:	9a ef       	ldi	r25, 0xFA	; 250
     3ae:	97 bd       	out	0x27, r25	; 39
     3b0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     3b4:	83 e0       	ldi	r24, 0x03	; 3
     3b6:	85 bd       	out	0x25, r24	; 37
     3b8:	08 95       	ret

000003ba <x_init>:
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	f8 94       	cli
     3c0:	8e ef       	ldi	r24, 0xFE	; 254
     3c2:	80 93 17 0c 	sts	0x0C17, r24	; 0x800c17 <x_disable_status>
     3c6:	10 92 06 04 	sts	0x0406, r1	; 0x800406 <x_suspend_status>
     3ca:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <x_delay_status>
     3ce:	10 92 e4 03 	sts	0x03E4, r1	; 0x8003e4 <x_thread_id>
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	80 93 18 0c 	sts	0x0C18, r24	; 0x800c18 <x_thread_mask>
     3d8:	c6 ee       	ldi	r28, 0xE6	; 230
     3da:	d3 e0       	ldi	r29, 0x03	; 3
     3dc:	86 e0       	ldi	r24, 0x06	; 6
     3de:	95 e0       	ldi	r25, 0x05	; 5
     3e0:	99 83       	std	Y+1, r25	; 0x01
     3e2:	88 83       	st	Y, r24
     3e4:	9b 83       	std	Y+3, r25	; 0x03
     3e6:	8a 83       	std	Y+2, r24	; 0x02
     3e8:	86 e0       	ldi	r24, 0x06	; 6
     3ea:	96 e0       	ldi	r25, 0x06	; 6
     3ec:	9d 83       	std	Y+5, r25	; 0x05
     3ee:	8c 83       	std	Y+4, r24	; 0x04
     3f0:	9f 83       	std	Y+7, r25	; 0x07
     3f2:	8e 83       	std	Y+6, r24	; 0x06
     3f4:	86 e0       	ldi	r24, 0x06	; 6
     3f6:	97 e0       	ldi	r25, 0x07	; 7
     3f8:	99 87       	std	Y+9, r25	; 0x09
     3fa:	88 87       	std	Y+8, r24	; 0x08
     3fc:	9b 87       	std	Y+11, r25	; 0x0b
     3fe:	8a 87       	std	Y+10, r24	; 0x0a
     400:	86 e0       	ldi	r24, 0x06	; 6
     402:	98 e0       	ldi	r25, 0x08	; 8
     404:	9d 87       	std	Y+13, r25	; 0x0d
     406:	8c 87       	std	Y+12, r24	; 0x0c
     408:	9f 87       	std	Y+15, r25	; 0x0f
     40a:	8e 87       	std	Y+14, r24	; 0x0e
     40c:	86 e0       	ldi	r24, 0x06	; 6
     40e:	99 e0       	ldi	r25, 0x09	; 9
     410:	99 8b       	std	Y+17, r25	; 0x11
     412:	88 8b       	std	Y+16, r24	; 0x10
     414:	9b 8b       	std	Y+19, r25	; 0x13
     416:	8a 8b       	std	Y+18, r24	; 0x12
     418:	86 e0       	ldi	r24, 0x06	; 6
     41a:	9a e0       	ldi	r25, 0x0A	; 10
     41c:	9d 8b       	std	Y+21, r25	; 0x15
     41e:	8c 8b       	std	Y+20, r24	; 0x14
     420:	9f 8b       	std	Y+23, r25	; 0x17
     422:	8e 8b       	std	Y+22, r24	; 0x16
     424:	86 e0       	ldi	r24, 0x06	; 6
     426:	9b e0       	ldi	r25, 0x0B	; 11
     428:	99 8f       	std	Y+25, r25	; 0x19
     42a:	88 8f       	std	Y+24, r24	; 0x18
     42c:	9b 8f       	std	Y+27, r25	; 0x1b
     42e:	8a 8f       	std	Y+26, r24	; 0x1a
     430:	86 e0       	ldi	r24, 0x06	; 6
     432:	9c e0       	ldi	r25, 0x0C	; 12
     434:	9d 8f       	std	Y+29, r25	; 0x1d
     436:	8c 8f       	std	Y+28, r24	; 0x1c
     438:	9f 8f       	std	Y+31, r25	; 0x1f
     43a:	8e 8f       	std	Y+30, r24	; 0x1e
     43c:	8a ea       	ldi	r24, 0xAA	; 170
     43e:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <x_thread_stacks>
     442:	80 93 07 05 	sts	0x0507, r24	; 0x800507 <x_thread_stacks+0x100>
     446:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <x_thread_stacks+0x200>
     44a:	80 93 07 07 	sts	0x0707, r24	; 0x800707 <x_thread_stacks+0x300>
     44e:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <x_thread_stacks+0x400>
     452:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <x_thread_stacks+0x500>
     456:	80 93 07 0a 	sts	0x0A07, r24	; 0x800a07 <x_thread_stacks+0x600>
     45a:	80 93 07 0b 	sts	0x0B07, r24	; 0x800b07 <x_thread_stacks+0x700>
     45e:	a4 df       	rcall	.-184    	; 0x3a8 <init_System_Timer>
     460:	ed b7       	in	r30, 0x3d	; 61
     462:	fe b7       	in	r31, 0x3e	; 62
     464:	a8 81       	ld	r26, Y
     466:	b9 81       	ldd	r27, Y+1	; 0x01
     468:	85 81       	ldd	r24, Z+5	; 0x05
     46a:	8c 93       	st	X, r24
     46c:	a8 81       	ld	r26, Y
     46e:	b9 81       	ldd	r27, Y+1	; 0x01
     470:	84 81       	ldd	r24, Z+4	; 0x04
     472:	11 97       	sbiw	r26, 0x01	; 1
     474:	8c 93       	st	X, r24
     476:	a8 81       	ld	r26, Y
     478:	b9 81       	ldd	r27, Y+1	; 0x01
     47a:	83 81       	ldd	r24, Z+3	; 0x03
     47c:	12 97       	sbiw	r26, 0x02	; 2
     47e:	8c 93       	st	X, r24
     480:	a8 81       	ld	r26, Y
     482:	b9 81       	ldd	r27, Y+1	; 0x01
     484:	82 81       	ldd	r24, Z+2	; 0x02
     486:	13 97       	sbiw	r26, 0x03	; 3
     488:	8c 93       	st	X, r24
     48a:	88 81       	ld	r24, Y
     48c:	99 81       	ldd	r25, Y+1	; 0x01
     48e:	21 81       	ldd	r18, Z+1	; 0x01
     490:	fc 01       	movw	r30, r24
     492:	34 97       	sbiw	r30, 0x04	; 4
     494:	20 83       	st	Z, r18
     496:	88 81       	ld	r24, Y
     498:	99 81       	ldd	r25, Y+1	; 0x01
     49a:	05 97       	sbiw	r24, 0x05	; 5
     49c:	9e bf       	out	0x3e, r25	; 62
     49e:	8d bf       	out	0x3d, r24	; 61
     4a0:	78 94       	sei
     4a2:	df 91       	pop	r29
     4a4:	cf 91       	pop	r28
     4a6:	08 95       	ret

000004a8 <x_delay>:
     4a8:	9c 01       	movw	r18, r24
     4aa:	9f b7       	in	r25, 0x3f	; 63
     4ac:	f8 94       	cli
     4ae:	e0 91 e4 03 	lds	r30, 0x03E4	; 0x8003e4 <x_thread_id>
     4b2:	f0 e0       	ldi	r31, 0x00	; 0
     4b4:	ee 0f       	add	r30, r30
     4b6:	ff 1f       	adc	r31, r31
     4b8:	e9 5f       	subi	r30, 0xF9	; 249
     4ba:	f3 4f       	sbci	r31, 0xF3	; 243
     4bc:	31 83       	std	Z+1, r19	; 0x01
     4be:	20 83       	st	Z, r18
     4c0:	20 91 e5 03 	lds	r18, 0x03E5	; 0x8003e5 <x_delay_status>
     4c4:	80 91 18 0c 	lds	r24, 0x0C18	; 0x800c18 <x_thread_mask>
     4c8:	82 2b       	or	r24, r18
     4ca:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <x_delay_status>
     4ce:	9f bf       	out	0x3f, r25	; 63
     4d0:	29 ce       	rjmp	.-942    	; 0x124 <x_yield>
     4d2:	08 95       	ret

000004d4 <__vector_21>:
     4d4:	1f 92       	push	r1
     4d6:	0f 92       	push	r0
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	0f 92       	push	r0
     4dc:	11 24       	eor	r1, r1
     4de:	0b b6       	in	r0, 0x3b	; 59
     4e0:	0f 92       	push	r0
     4e2:	2f 93       	push	r18
     4e4:	3f 93       	push	r19
     4e6:	4f 93       	push	r20
     4e8:	5f 93       	push	r21
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	af 93       	push	r26
     4f0:	bf 93       	push	r27
     4f2:	ef 93       	push	r30
     4f4:	ff 93       	push	r31
     4f6:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     4fa:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     4fe:	a0 91 42 02 	lds	r26, 0x0242	; 0x800242 <__data_end+0x2>
     502:	b0 91 43 02 	lds	r27, 0x0243	; 0x800243 <__data_end+0x3>
     506:	01 96       	adiw	r24, 0x01	; 1
     508:	a1 1d       	adc	r26, r1
     50a:	b1 1d       	adc	r27, r1
     50c:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__data_end>
     510:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <__data_end+0x1>
     514:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <__data_end+0x2>
     518:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <__data_end+0x3>
     51c:	30 91 e5 03 	lds	r19, 0x03E5	; 0x8003e5 <x_delay_status>
     520:	e7 e0       	ldi	r30, 0x07	; 7
     522:	fc e0       	ldi	r31, 0x0C	; 12
     524:	47 e1       	ldi	r20, 0x17	; 23
     526:	5c e0       	ldi	r21, 0x0C	; 12
     528:	21 e0       	ldi	r18, 0x01	; 1
     52a:	80 81       	ld	r24, Z
     52c:	91 81       	ldd	r25, Z+1	; 0x01
     52e:	01 97       	sbiw	r24, 0x01	; 1
     530:	81 93       	st	Z+, r24
     532:	91 93       	st	Z+, r25
     534:	89 2b       	or	r24, r25
     536:	19 f4       	brne	.+6      	; 0x53e <__vector_21+0x6a>
     538:	82 2f       	mov	r24, r18
     53a:	80 95       	com	r24
     53c:	38 23       	and	r19, r24
     53e:	22 0f       	add	r18, r18
     540:	e4 17       	cp	r30, r20
     542:	f5 07       	cpc	r31, r21
     544:	91 f7       	brne	.-28     	; 0x52a <__vector_21+0x56>
     546:	30 93 e5 03 	sts	0x03E5, r19	; 0x8003e5 <x_delay_status>
     54a:	ff 91       	pop	r31
     54c:	ef 91       	pop	r30
     54e:	bf 91       	pop	r27
     550:	af 91       	pop	r26
     552:	9f 91       	pop	r25
     554:	8f 91       	pop	r24
     556:	5f 91       	pop	r21
     558:	4f 91       	pop	r20
     55a:	3f 91       	pop	r19
     55c:	2f 91       	pop	r18
     55e:	0f 90       	pop	r0
     560:	0b be       	out	0x3b, r0	; 59
     562:	0f 90       	pop	r0
     564:	0f be       	out	0x3f, r0	; 63
     566:	0f 90       	pop	r0
     568:	1f 90       	pop	r1
     56a:	18 95       	reti

0000056c <x_stack_overflow>:
     56c:	ac 01       	movw	r20, r24
     56e:	27 9a       	sbi	0x04, 7	; 4
     570:	2f 98       	cbi	0x05, 7	; 5
   must be defined before including this header file. Also, the
   backward compatible algorithm will be chosen if the code is
   compiled in a <em>freestanding environment</em> (GCC option
   \c -ffreestanding), as the math functions required for rounding are
   not available to the compiler then.

     572:	2f ef       	ldi	r18, 0xFF	; 255
     574:	31 ee       	ldi	r19, 0xE1	; 225
     576:	74 e0       	ldi	r23, 0x04	; 4
     578:	21 50       	subi	r18, 0x01	; 1
     57a:	30 40       	sbci	r19, 0x00	; 0
     57c:	70 40       	sbci	r23, 0x00	; 0
     57e:	e1 f7       	brne	.-8      	; 0x578 <x_stack_overflow+0xc>
     580:	00 c0       	rjmp	.+0      	; 0x582 <x_stack_overflow+0x16>
     582:	00 00       	nop
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	80 e0       	ldi	r24, 0x00	; 0
     588:	55 23       	and	r21, r21
     58a:	fc f0       	brlt	.+62     	; 0x5ca <x_stack_overflow+0x5e>
     58c:	26 2f       	mov	r18, r22
     58e:	38 2f       	mov	r19, r24
     590:	95 b1       	in	r25, 0x05	; 5
     592:	90 58       	subi	r25, 0x80	; 128
     594:	95 b9       	out	0x05, r25	; 5
     596:	9f ef       	ldi	r25, 0xFF	; 255
     598:	e0 e7       	ldi	r30, 0x70	; 112
     59a:	72 e0       	ldi	r23, 0x02	; 2
     59c:	91 50       	subi	r25, 0x01	; 1
     59e:	e0 40       	sbci	r30, 0x00	; 0
     5a0:	70 40       	sbci	r23, 0x00	; 0
     5a2:	e1 f7       	brne	.-8      	; 0x59c <x_stack_overflow+0x30>
     5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <x_stack_overflow+0x3a>
     5a6:	00 00       	nop
     5a8:	95 b1       	in	r25, 0x05	; 5
     5aa:	90 58       	subi	r25, 0x80	; 128
     5ac:	95 b9       	out	0x05, r25	; 5
     5ae:	9f ef       	ldi	r25, 0xFF	; 255
     5b0:	e9 e6       	ldi	r30, 0x69	; 105
     5b2:	78 e1       	ldi	r23, 0x18	; 24
     5b4:	91 50       	subi	r25, 0x01	; 1
     5b6:	e0 40       	sbci	r30, 0x00	; 0
     5b8:	70 40       	sbci	r23, 0x00	; 0
     5ba:	e1 f7       	brne	.-8      	; 0x5b4 <x_stack_overflow+0x48>
     5bc:	00 c0       	rjmp	.+0      	; 0x5be <x_stack_overflow+0x52>
     5be:	00 00       	nop
     5c0:	2f 5f       	subi	r18, 0xFF	; 255
     5c2:	3f 4f       	sbci	r19, 0xFF	; 255
     5c4:	42 17       	cp	r20, r18
     5c6:	53 07       	cpc	r21, r19
     5c8:	1c f7       	brge	.-58     	; 0x590 <x_stack_overflow+0x24>
     5ca:	9f ef       	ldi	r25, 0xFF	; 255
     5cc:	e3 e2       	ldi	r30, 0x23	; 35
     5ce:	24 ef       	ldi	r18, 0xF4	; 244
     5d0:	91 50       	subi	r25, 0x01	; 1
     5d2:	e0 40       	sbci	r30, 0x00	; 0
     5d4:	20 40       	sbci	r18, 0x00	; 0
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <x_stack_overflow+0x64>
     5d8:	00 c0       	rjmp	.+0      	; 0x5da <x_stack_overflow+0x6e>
     5da:	00 00       	nop
     5dc:	d5 cf       	rjmp	.-86     	; 0x588 <x_stack_overflow+0x1c>

000005de <Serial_config>:
     5de:	fc 01       	movw	r30, r24
     5e0:	ee 0f       	add	r30, r30
     5e2:	ff 1f       	adc	r31, r31
     5e4:	e8 5c       	subi	r30, 0xC8	; 200
     5e6:	fd 4f       	sbci	r31, 0xFD	; 253
     5e8:	a0 81       	ld	r26, Z
     5ea:	b1 81       	ldd	r27, Z+1	; 0x01
     5ec:	11 96       	adiw	r26, 0x01	; 1
     5ee:	1c 92       	st	X, r1
     5f0:	3f ef       	ldi	r19, 0xFF	; 255
     5f2:	a0 e7       	ldi	r26, 0x70	; 112
     5f4:	b2 e0       	ldi	r27, 0x02	; 2
     5f6:	31 50       	subi	r19, 0x01	; 1
     5f8:	a0 40       	sbci	r26, 0x00	; 0
     5fa:	b0 40       	sbci	r27, 0x00	; 0
     5fc:	e1 f7       	brne	.-8      	; 0x5f6 <Serial_config+0x18>
     5fe:	00 c0       	rjmp	.+0      	; 0x600 <Serial_config+0x22>
     600:	00 00       	nop
     602:	01 90       	ld	r0, Z+
     604:	f0 81       	ld	r31, Z
     606:	e0 2d       	mov	r30, r0
     608:	36 81       	ldd	r19, Z+6	; 0x06
     60a:	40 38       	cpi	r20, 0x80	; 128
     60c:	30 e7       	ldi	r19, 0x70	; 112
     60e:	53 07       	cpc	r21, r19
     610:	61 05       	cpc	r22, r1
     612:	71 05       	cpc	r23, r1
     614:	09 f4       	brne	.+2      	; 0x618 <Serial_config+0x3a>
     616:	a3 c0       	rjmp	.+326    	; 0x75e <Serial_config+0x180>
     618:	24 f5       	brge	.+72     	; 0x662 <Serial_config+0x84>
     61a:	40 38       	cpi	r20, 0x80	; 128
     61c:	b5 e2       	ldi	r27, 0x25	; 37
     61e:	5b 07       	cpc	r21, r27
     620:	61 05       	cpc	r22, r1
     622:	71 05       	cpc	r23, r1
     624:	09 f4       	brne	.+2      	; 0x628 <Serial_config+0x4a>
     626:	6b c0       	rjmp	.+214    	; 0x6fe <Serial_config+0x120>
     628:	74 f4       	brge	.+28     	; 0x646 <Serial_config+0x68>
     62a:	40 36       	cpi	r20, 0x60	; 96
     62c:	a9 e0       	ldi	r26, 0x09	; 9
     62e:	5a 07       	cpc	r21, r26
     630:	61 05       	cpc	r22, r1
     632:	71 05       	cpc	r23, r1
     634:	09 f4       	brne	.+2      	; 0x638 <Serial_config+0x5a>
     636:	43 c0       	rjmp	.+134    	; 0x6be <Serial_config+0xe0>
     638:	40 3c       	cpi	r20, 0xC0	; 192
     63a:	52 41       	sbci	r21, 0x12	; 18
     63c:	61 05       	cpc	r22, r1
     63e:	71 05       	cpc	r23, r1
     640:	09 f4       	brne	.+2      	; 0x644 <Serial_config+0x66>
     642:	4d c0       	rjmp	.+154    	; 0x6de <Serial_config+0x100>
     644:	fb c0       	rjmp	.+502    	; 0x83c <Serial_config+0x25e>
     646:	40 34       	cpi	r20, 0x40	; 64
     648:	38 e3       	ldi	r19, 0x38	; 56
     64a:	53 07       	cpc	r21, r19
     64c:	61 05       	cpc	r22, r1
     64e:	71 05       	cpc	r23, r1
     650:	09 f4       	brne	.+2      	; 0x654 <Serial_config+0x76>
     652:	65 c0       	rjmp	.+202    	; 0x71e <Serial_config+0x140>
     654:	41 15       	cp	r20, r1
     656:	5b 44       	sbci	r21, 0x4B	; 75
     658:	61 05       	cpc	r22, r1
     65a:	71 05       	cpc	r23, r1
     65c:	09 f4       	brne	.+2      	; 0x660 <Serial_config+0x82>
     65e:	6f c0       	rjmp	.+222    	; 0x73e <Serial_config+0x160>
     660:	ed c0       	rjmp	.+474    	; 0x83c <Serial_config+0x25e>
     662:	41 15       	cp	r20, r1
     664:	b2 ec       	ldi	r27, 0xC2	; 194
     666:	5b 07       	cpc	r21, r27
     668:	b1 e0       	ldi	r27, 0x01	; 1
     66a:	6b 07       	cpc	r22, r27
     66c:	71 05       	cpc	r23, r1
     66e:	09 f4       	brne	.+2      	; 0x672 <Serial_config+0x94>
     670:	a6 c0       	rjmp	.+332    	; 0x7be <Serial_config+0x1e0>
     672:	74 f4       	brge	.+28     	; 0x690 <Serial_config+0xb2>
     674:	41 15       	cp	r20, r1
     676:	a6 e9       	ldi	r26, 0x96	; 150
     678:	5a 07       	cpc	r21, r26
     67a:	61 05       	cpc	r22, r1
     67c:	71 05       	cpc	r23, r1
     67e:	09 f4       	brne	.+2      	; 0x682 <Serial_config+0xa4>
     680:	7e c0       	rjmp	.+252    	; 0x77e <Serial_config+0x1a0>
     682:	41 15       	cp	r20, r1
     684:	51 4e       	sbci	r21, 0xE1	; 225
     686:	61 05       	cpc	r22, r1
     688:	71 05       	cpc	r23, r1
     68a:	09 f4       	brne	.+2      	; 0x68e <Serial_config+0xb0>
     68c:	88 c0       	rjmp	.+272    	; 0x79e <Serial_config+0x1c0>
     68e:	d6 c0       	rjmp	.+428    	; 0x83c <Serial_config+0x25e>
     690:	40 32       	cpi	r20, 0x20	; 32
     692:	31 ea       	ldi	r19, 0xA1	; 161
     694:	53 07       	cpc	r21, r19
     696:	37 e0       	ldi	r19, 0x07	; 7
     698:	63 07       	cpc	r22, r19
     69a:	71 05       	cpc	r23, r1
     69c:	09 f4       	brne	.+2      	; 0x6a0 <Serial_config+0xc2>
     69e:	af c0       	rjmp	.+350    	; 0x7fe <Serial_config+0x220>
     6a0:	40 34       	cpi	r20, 0x40	; 64
     6a2:	a2 e4       	ldi	r26, 0x42	; 66
     6a4:	5a 07       	cpc	r21, r26
     6a6:	af e0       	ldi	r26, 0x0F	; 15
     6a8:	6a 07       	cpc	r22, r26
     6aa:	71 05       	cpc	r23, r1
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <Serial_config+0xd2>
     6ae:	b7 c0       	rjmp	.+366    	; 0x81e <Serial_config+0x240>
     6b0:	40 39       	cpi	r20, 0x90	; 144
     6b2:	50 4d       	sbci	r21, 0xD0	; 208
     6b4:	63 40       	sbci	r22, 0x03	; 3
     6b6:	71 05       	cpc	r23, r1
     6b8:	09 f0       	breq	.+2      	; 0x6bc <Serial_config+0xde>
     6ba:	c0 c0       	rjmp	.+384    	; 0x83c <Serial_config+0x25e>
     6bc:	90 c0       	rjmp	.+288    	; 0x7de <Serial_config+0x200>
     6be:	40 e4       	ldi	r20, 0x40	; 64
     6c0:	53 e0       	ldi	r21, 0x03	; 3
     6c2:	55 83       	std	Z+5, r21	; 0x05
     6c4:	44 83       	std	Z+4, r20	; 0x04
     6c6:	fc 01       	movw	r30, r24
     6c8:	ee 0f       	add	r30, r30
     6ca:	ff 1f       	adc	r31, r31
     6cc:	e8 5c       	subi	r30, 0xC8	; 200
     6ce:	fd 4f       	sbci	r31, 0xFD	; 253
     6d0:	01 90       	ld	r0, Z+
     6d2:	f0 81       	ld	r31, Z
     6d4:	e0 2d       	mov	r30, r0
     6d6:	30 81       	ld	r19, Z
     6d8:	32 60       	ori	r19, 0x02	; 2
     6da:	30 83       	st	Z, r19
     6dc:	af c0       	rjmp	.+350    	; 0x83c <Serial_config+0x25e>
     6de:	40 ea       	ldi	r20, 0xA0	; 160
     6e0:	51 e0       	ldi	r21, 0x01	; 1
     6e2:	55 83       	std	Z+5, r21	; 0x05
     6e4:	44 83       	std	Z+4, r20	; 0x04
     6e6:	fc 01       	movw	r30, r24
     6e8:	ee 0f       	add	r30, r30
     6ea:	ff 1f       	adc	r31, r31
     6ec:	e8 5c       	subi	r30, 0xC8	; 200
     6ee:	fd 4f       	sbci	r31, 0xFD	; 253
     6f0:	01 90       	ld	r0, Z+
     6f2:	f0 81       	ld	r31, Z
     6f4:	e0 2d       	mov	r30, r0
     6f6:	30 81       	ld	r19, Z
     6f8:	32 60       	ori	r19, 0x02	; 2
     6fa:	30 83       	st	Z, r19
     6fc:	9f c0       	rjmp	.+318    	; 0x83c <Serial_config+0x25e>
     6fe:	47 e6       	ldi	r20, 0x67	; 103
     700:	50 e0       	ldi	r21, 0x00	; 0
     702:	55 83       	std	Z+5, r21	; 0x05
     704:	44 83       	std	Z+4, r20	; 0x04
     706:	fc 01       	movw	r30, r24
     708:	ee 0f       	add	r30, r30
     70a:	ff 1f       	adc	r31, r31
     70c:	e8 5c       	subi	r30, 0xC8	; 200
     70e:	fd 4f       	sbci	r31, 0xFD	; 253
     710:	01 90       	ld	r0, Z+
     712:	f0 81       	ld	r31, Z
     714:	e0 2d       	mov	r30, r0
     716:	30 81       	ld	r19, Z
     718:	3d 7f       	andi	r19, 0xFD	; 253
     71a:	30 83       	st	Z, r19
     71c:	8f c0       	rjmp	.+286    	; 0x83c <Serial_config+0x25e>
     71e:	4a e8       	ldi	r20, 0x8A	; 138
     720:	50 e0       	ldi	r21, 0x00	; 0
     722:	55 83       	std	Z+5, r21	; 0x05
     724:	44 83       	std	Z+4, r20	; 0x04
     726:	fc 01       	movw	r30, r24
     728:	ee 0f       	add	r30, r30
     72a:	ff 1f       	adc	r31, r31
     72c:	e8 5c       	subi	r30, 0xC8	; 200
     72e:	fd 4f       	sbci	r31, 0xFD	; 253
     730:	01 90       	ld	r0, Z+
     732:	f0 81       	ld	r31, Z
     734:	e0 2d       	mov	r30, r0
     736:	30 81       	ld	r19, Z
     738:	32 60       	ori	r19, 0x02	; 2
     73a:	30 83       	st	Z, r19
     73c:	7f c0       	rjmp	.+254    	; 0x83c <Serial_config+0x25e>
     73e:	43 e3       	ldi	r20, 0x33	; 51
     740:	50 e0       	ldi	r21, 0x00	; 0
     742:	55 83       	std	Z+5, r21	; 0x05
     744:	44 83       	std	Z+4, r20	; 0x04
     746:	fc 01       	movw	r30, r24
     748:	ee 0f       	add	r30, r30
     74a:	ff 1f       	adc	r31, r31
     74c:	e8 5c       	subi	r30, 0xC8	; 200
     74e:	fd 4f       	sbci	r31, 0xFD	; 253
     750:	01 90       	ld	r0, Z+
     752:	f0 81       	ld	r31, Z
     754:	e0 2d       	mov	r30, r0
     756:	30 81       	ld	r19, Z
     758:	3d 7f       	andi	r19, 0xFD	; 253
     75a:	30 83       	st	Z, r19
     75c:	6f c0       	rjmp	.+222    	; 0x83c <Serial_config+0x25e>
     75e:	44 e4       	ldi	r20, 0x44	; 68
     760:	50 e0       	ldi	r21, 0x00	; 0
     762:	55 83       	std	Z+5, r21	; 0x05
     764:	44 83       	std	Z+4, r20	; 0x04
     766:	fc 01       	movw	r30, r24
     768:	ee 0f       	add	r30, r30
     76a:	ff 1f       	adc	r31, r31
     76c:	e8 5c       	subi	r30, 0xC8	; 200
     76e:	fd 4f       	sbci	r31, 0xFD	; 253
     770:	01 90       	ld	r0, Z+
     772:	f0 81       	ld	r31, Z
     774:	e0 2d       	mov	r30, r0
     776:	30 81       	ld	r19, Z
     778:	32 60       	ori	r19, 0x02	; 2
     77a:	30 83       	st	Z, r19
     77c:	5f c0       	rjmp	.+190    	; 0x83c <Serial_config+0x25e>
     77e:	49 e1       	ldi	r20, 0x19	; 25
     780:	50 e0       	ldi	r21, 0x00	; 0
     782:	55 83       	std	Z+5, r21	; 0x05
     784:	44 83       	std	Z+4, r20	; 0x04
     786:	fc 01       	movw	r30, r24
     788:	ee 0f       	add	r30, r30
     78a:	ff 1f       	adc	r31, r31
     78c:	e8 5c       	subi	r30, 0xC8	; 200
     78e:	fd 4f       	sbci	r31, 0xFD	; 253
     790:	01 90       	ld	r0, Z+
     792:	f0 81       	ld	r31, Z
     794:	e0 2d       	mov	r30, r0
     796:	30 81       	ld	r19, Z
     798:	3d 7f       	andi	r19, 0xFD	; 253
     79a:	30 83       	st	Z, r19
     79c:	4f c0       	rjmp	.+158    	; 0x83c <Serial_config+0x25e>
     79e:	42 e2       	ldi	r20, 0x22	; 34
     7a0:	50 e0       	ldi	r21, 0x00	; 0
     7a2:	55 83       	std	Z+5, r21	; 0x05
     7a4:	44 83       	std	Z+4, r20	; 0x04
     7a6:	fc 01       	movw	r30, r24
     7a8:	ee 0f       	add	r30, r30
     7aa:	ff 1f       	adc	r31, r31
     7ac:	e8 5c       	subi	r30, 0xC8	; 200
     7ae:	fd 4f       	sbci	r31, 0xFD	; 253
     7b0:	01 90       	ld	r0, Z+
     7b2:	f0 81       	ld	r31, Z
     7b4:	e0 2d       	mov	r30, r0
     7b6:	30 81       	ld	r19, Z
     7b8:	32 60       	ori	r19, 0x02	; 2
     7ba:	30 83       	st	Z, r19
     7bc:	3f c0       	rjmp	.+126    	; 0x83c <Serial_config+0x25e>
     7be:	40 e1       	ldi	r20, 0x10	; 16
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	55 83       	std	Z+5, r21	; 0x05
     7c4:	44 83       	std	Z+4, r20	; 0x04
     7c6:	fc 01       	movw	r30, r24
     7c8:	ee 0f       	add	r30, r30
     7ca:	ff 1f       	adc	r31, r31
     7cc:	e8 5c       	subi	r30, 0xC8	; 200
     7ce:	fd 4f       	sbci	r31, 0xFD	; 253
     7d0:	01 90       	ld	r0, Z+
     7d2:	f0 81       	ld	r31, Z
     7d4:	e0 2d       	mov	r30, r0
     7d6:	30 81       	ld	r19, Z
     7d8:	32 60       	ori	r19, 0x02	; 2
     7da:	30 83       	st	Z, r19
     7dc:	2f c0       	rjmp	.+94     	; 0x83c <Serial_config+0x25e>
     7de:	47 e0       	ldi	r20, 0x07	; 7
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	55 83       	std	Z+5, r21	; 0x05
     7e4:	44 83       	std	Z+4, r20	; 0x04
     7e6:	fc 01       	movw	r30, r24
     7e8:	ee 0f       	add	r30, r30
     7ea:	ff 1f       	adc	r31, r31
     7ec:	e8 5c       	subi	r30, 0xC8	; 200
     7ee:	fd 4f       	sbci	r31, 0xFD	; 253
     7f0:	01 90       	ld	r0, Z+
     7f2:	f0 81       	ld	r31, Z
     7f4:	e0 2d       	mov	r30, r0
     7f6:	30 81       	ld	r19, Z
     7f8:	32 60       	ori	r19, 0x02	; 2
     7fa:	30 83       	st	Z, r19
     7fc:	1f c0       	rjmp	.+62     	; 0x83c <Serial_config+0x25e>
     7fe:	43 e0       	ldi	r20, 0x03	; 3
     800:	50 e0       	ldi	r21, 0x00	; 0
     802:	55 83       	std	Z+5, r21	; 0x05
     804:	44 83       	std	Z+4, r20	; 0x04
     806:	fc 01       	movw	r30, r24
     808:	ee 0f       	add	r30, r30
     80a:	ff 1f       	adc	r31, r31
     80c:	e8 5c       	subi	r30, 0xC8	; 200
     80e:	fd 4f       	sbci	r31, 0xFD	; 253
     810:	01 90       	ld	r0, Z+
     812:	f0 81       	ld	r31, Z
     814:	e0 2d       	mov	r30, r0
     816:	30 81       	ld	r19, Z
     818:	32 60       	ori	r19, 0x02	; 2
     81a:	30 83       	st	Z, r19
     81c:	0f c0       	rjmp	.+30     	; 0x83c <Serial_config+0x25e>
     81e:	41 e0       	ldi	r20, 0x01	; 1
     820:	50 e0       	ldi	r21, 0x00	; 0
     822:	55 83       	std	Z+5, r21	; 0x05
     824:	44 83       	std	Z+4, r20	; 0x04
     826:	fc 01       	movw	r30, r24
     828:	ee 0f       	add	r30, r30
     82a:	ff 1f       	adc	r31, r31
     82c:	e8 5c       	subi	r30, 0xC8	; 200
     82e:	fd 4f       	sbci	r31, 0xFD	; 253
     830:	01 90       	ld	r0, Z+
     832:	f0 81       	ld	r31, Z
     834:	e0 2d       	mov	r30, r0
     836:	30 81       	ld	r19, Z
     838:	32 60       	ori	r19, 0x02	; 2
     83a:	30 83       	st	Z, r19
     83c:	88 0f       	add	r24, r24
     83e:	99 1f       	adc	r25, r25
     840:	fc 01       	movw	r30, r24
     842:	e8 5c       	subi	r30, 0xC8	; 200
     844:	fd 4f       	sbci	r31, 0xFD	; 253
     846:	a0 81       	ld	r26, Z
     848:	b1 81       	ldd	r27, Z+1	; 0x01
     84a:	12 96       	adiw	r26, 0x02	; 2
     84c:	2c 93       	st	X, r18
     84e:	01 90       	ld	r0, Z+
     850:	f0 81       	ld	r31, Z
     852:	e0 2d       	mov	r30, r0
     854:	81 81       	ldd	r24, Z+1	; 0x01
     856:	88 69       	ori	r24, 0x98	; 152
     858:	81 83       	std	Z+1, r24	; 0x01
     85a:	08 95       	ret

0000085c <Q_delete>:
     85c:	28 e0       	ldi	r18, 0x08	; 8
     85e:	82 9f       	mul	r24, r18
     860:	c0 01       	movw	r24, r0
     862:	11 24       	eor	r1, r1
     864:	fc 01       	movw	r30, r24
     866:	ec 5b       	subi	r30, 0xBC	; 188
     868:	fd 4f       	sbci	r31, 0xFD	; 253
     86a:	17 82       	std	Z+7, r1	; 0x07
     86c:	16 82       	std	Z+6, r1	; 0x06
     86e:	10 82       	st	Z, r1
     870:	11 82       	std	Z+1, r1	; 0x01
     872:	83 81       	ldd	r24, Z+3	; 0x03
     874:	8e 7f       	andi	r24, 0xFE	; 254
     876:	82 60       	ori	r24, 0x02	; 2
     878:	83 83       	std	Z+3, r24	; 0x03
     87a:	15 82       	std	Z+5, r1	; 0x05
     87c:	14 82       	std	Z+4, r1	; 0x04
     87e:	12 82       	std	Z+2, r1	; 0x02
     880:	08 95       	ret

00000882 <Q_create>:
     882:	ef 92       	push	r14
     884:	ff 92       	push	r15
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	ec 01       	movw	r28, r24
     890:	7b 01       	movw	r14, r22
     892:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <sysQueue+0x6>
     896:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <sysQueue+0x7>
     89a:	89 2b       	or	r24, r25
     89c:	d9 f1       	breq	.+118    	; 0x914 <Q_create+0x92>
     89e:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <sysQueue+0xe>
     8a2:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <sysQueue+0xf>
     8a6:	89 2b       	or	r24, r25
     8a8:	79 f0       	breq	.+30     	; 0x8c8 <Q_create+0x46>
     8aa:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <sysQueue+0x16>
     8ae:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <sysQueue+0x17>
     8b2:	89 2b       	or	r24, r25
     8b4:	61 f0       	breq	.+24     	; 0x8ce <Q_create+0x4c>
     8b6:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <sysQueue+0x1e>
     8ba:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <sysQueue+0x1f>
     8be:	89 2b       	or	r24, r25
     8c0:	19 f5       	brne	.+70     	; 0x908 <Q_create+0x86>
     8c2:	03 e0       	ldi	r16, 0x03	; 3
     8c4:	10 e0       	ldi	r17, 0x00	; 0
     8c6:	28 c0       	rjmp	.+80     	; 0x918 <Q_create+0x96>
     8c8:	01 e0       	ldi	r16, 0x01	; 1
     8ca:	10 e0       	ldi	r17, 0x00	; 0
     8cc:	25 c0       	rjmp	.+74     	; 0x918 <Q_create+0x96>
     8ce:	02 e0       	ldi	r16, 0x02	; 2
     8d0:	10 e0       	ldi	r17, 0x00	; 0
     8d2:	22 c0       	rjmp	.+68     	; 0x918 <Q_create+0x96>
     8d4:	c1 30       	cpi	r28, 0x01	; 1
     8d6:	d1 05       	cpc	r29, r1
     8d8:	31 f0       	breq	.+12     	; 0x8e6 <Q_create+0x64>
     8da:	ce 01       	movw	r24, r28
     8dc:	01 97       	sbiw	r24, 0x01	; 1
     8de:	8c 23       	and	r24, r28
     8e0:	9d 23       	and	r25, r29
     8e2:	89 2b       	or	r24, r25
     8e4:	99 f4       	brne	.+38     	; 0x90c <Q_create+0x8a>
     8e6:	80 2f       	mov	r24, r16
     8e8:	b9 df       	rcall	.-142    	; 0x85c <Q_delete>
     8ea:	f8 01       	movw	r30, r16
     8ec:	ee 0f       	add	r30, r30
     8ee:	ff 1f       	adc	r31, r31
     8f0:	ee 0f       	add	r30, r30
     8f2:	ff 1f       	adc	r31, r31
     8f4:	ee 0f       	add	r30, r30
     8f6:	ff 1f       	adc	r31, r31
     8f8:	ec 5b       	subi	r30, 0xBC	; 188
     8fa:	fd 4f       	sbci	r31, 0xFD	; 253
     8fc:	f7 82       	std	Z+7, r15	; 0x07
     8fe:	e6 82       	std	Z+6, r14	; 0x06
     900:	c1 50       	subi	r28, 0x01	; 1
     902:	c2 83       	std	Z+2, r28	; 0x02
     904:	80 2f       	mov	r24, r16
     906:	0c c0       	rjmp	.+24     	; 0x920 <Q_create+0x9e>
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	0a c0       	rjmp	.+20     	; 0x920 <Q_create+0x9e>
     90c:	8f ef       	ldi	r24, 0xFF	; 255
     90e:	08 c0       	rjmp	.+16     	; 0x920 <Q_create+0x9e>
     910:	8f ef       	ldi	r24, 0xFF	; 255
     912:	06 c0       	rjmp	.+12     	; 0x920 <Q_create+0x9e>
     914:	00 e0       	ldi	r16, 0x00	; 0
     916:	10 e0       	ldi	r17, 0x00	; 0
     918:	e1 14       	cp	r14, r1
     91a:	f1 04       	cpc	r15, r1
     91c:	d9 f6       	brne	.-74     	; 0x8d4 <Q_create+0x52>
     91e:	f8 cf       	rjmp	.-16     	; 0x910 <Q_create+0x8e>
     920:	df 91       	pop	r29
     922:	cf 91       	pop	r28
     924:	1f 91       	pop	r17
     926:	0f 91       	pop	r16
     928:	ff 90       	pop	r15
     92a:	ef 90       	pop	r14
     92c:	08 95       	ret

0000092e <Serial_open>:
     92e:	8f 92       	push	r8
     930:	9f 92       	push	r9
     932:	af 92       	push	r10
     934:	bf 92       	push	r11
     936:	cf 92       	push	r12
     938:	df 92       	push	r13
     93a:	ef 92       	push	r14
     93c:	ff 92       	push	r15
     93e:	0f 93       	push	r16
     940:	1f 93       	push	r17
     942:	cf 93       	push	r28
     944:	df 93       	push	r29
     946:	8c 01       	movw	r16, r24
     948:	4a 01       	movw	r8, r20
     94a:	5b 01       	movw	r10, r22
     94c:	69 01       	movw	r12, r18
     94e:	ec 01       	movw	r28, r24
     950:	cc 0f       	add	r28, r28
     952:	dd 1f       	adc	r29, r29
     954:	bc 01       	movw	r22, r24
     956:	66 0f       	add	r22, r22
     958:	77 1f       	adc	r23, r23
     95a:	66 0f       	add	r22, r22
     95c:	77 1f       	adc	r23, r23
     95e:	66 0f       	add	r22, r22
     960:	77 1f       	adc	r23, r23
     962:	c6 0f       	add	r28, r22
     964:	d7 1f       	adc	r29, r23
     966:	c0 5f       	subi	r28, 0xF0	; 240
     968:	dd 4f       	sbci	r29, 0xFD	; 253
     96a:	6a 81       	ldd	r22, Y+2	; 0x02
     96c:	7b 81       	ldd	r23, Y+3	; 0x03
     96e:	8c 81       	ldd	r24, Y+4	; 0x04
     970:	9d 81       	ldd	r25, Y+5	; 0x05
     972:	87 df       	rcall	.-242    	; 0x882 <Q_create>
     974:	f8 2e       	mov	r15, r24
     976:	6e 81       	ldd	r22, Y+6	; 0x06
     978:	7f 81       	ldd	r23, Y+7	; 0x07
     97a:	88 85       	ldd	r24, Y+8	; 0x08
     97c:	99 85       	ldd	r25, Y+9	; 0x09
     97e:	81 df       	rcall	.-254    	; 0x882 <Q_create>
     980:	e8 2e       	mov	r14, r24
     982:	f8 82       	st	Y, r15
     984:	89 83       	std	Y+1, r24	; 0x01
     986:	96 01       	movw	r18, r12
     988:	b5 01       	movw	r22, r10
     98a:	a4 01       	movw	r20, r8
     98c:	c8 01       	movw	r24, r16
     98e:	27 de       	rcall	.-946    	; 0x5de <Serial_config>
     990:	ff 20       	and	r15, r15
     992:	34 f0       	brlt	.+12     	; 0x9a0 <Serial_open+0x72>
     994:	ee 20       	and	r14, r14
     996:	3c f0       	brlt	.+14     	; 0x9a6 <Serial_open+0x78>
     998:	78 94       	sei
     99a:	80 e0       	ldi	r24, 0x00	; 0
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	05 c0       	rjmp	.+10     	; 0x9aa <Serial_open+0x7c>
     9a0:	8f ef       	ldi	r24, 0xFF	; 255
     9a2:	9f ef       	ldi	r25, 0xFF	; 255
     9a4:	02 c0       	rjmp	.+4      	; 0x9aa <Serial_open+0x7c>
     9a6:	8f ef       	ldi	r24, 0xFF	; 255
     9a8:	9f ef       	ldi	r25, 0xFF	; 255
     9aa:	df 91       	pop	r29
     9ac:	cf 91       	pop	r28
     9ae:	1f 91       	pop	r17
     9b0:	0f 91       	pop	r16
     9b2:	ff 90       	pop	r15
     9b4:	ef 90       	pop	r14
     9b6:	df 90       	pop	r13
     9b8:	cf 90       	pop	r12
     9ba:	bf 90       	pop	r11
     9bc:	af 90       	pop	r10
     9be:	9f 90       	pop	r9
     9c0:	8f 90       	pop	r8
     9c2:	08 95       	ret

000009c4 <Q_getc>:
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	e8 2f       	mov	r30, r24
     9ca:	f0 e0       	ldi	r31, 0x00	; 0
     9cc:	df 01       	movw	r26, r30
     9ce:	aa 0f       	add	r26, r26
     9d0:	bb 1f       	adc	r27, r27
     9d2:	aa 0f       	add	r26, r26
     9d4:	bb 1f       	adc	r27, r27
     9d6:	aa 0f       	add	r26, r26
     9d8:	bb 1f       	adc	r27, r27
     9da:	ac 5b       	subi	r26, 0xBC	; 188
     9dc:	bd 4f       	sbci	r27, 0xFD	; 253
     9de:	13 96       	adiw	r26, 0x03	; 3
     9e0:	8c 91       	ld	r24, X
     9e2:	81 fd       	sbrc	r24, 1
     9e4:	49 c0       	rjmp	.+146    	; 0xa78 <Q_getc+0xb4>
     9e6:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     9e8:	f8 94       	cli
     9ea:	df 01       	movw	r26, r30
     9ec:	aa 0f       	add	r26, r26
     9ee:	bb 1f       	adc	r27, r27
     9f0:	aa 0f       	add	r26, r26
     9f2:	bb 1f       	adc	r27, r27
     9f4:	aa 0f       	add	r26, r26
     9f6:	bb 1f       	adc	r27, r27
     9f8:	ac 5b       	subi	r26, 0xBC	; 188
     9fa:	bd 4f       	sbci	r27, 0xFD	; 253
     9fc:	11 96       	adiw	r26, 0x01	; 1
     9fe:	8c 91       	ld	r24, X
     a00:	11 97       	sbiw	r26, 0x01	; 1
     a02:	16 96       	adiw	r26, 0x06	; 6
     a04:	cd 91       	ld	r28, X+
     a06:	dc 91       	ld	r29, X
     a08:	17 97       	sbiw	r26, 0x07	; 7
     a0a:	c8 0f       	add	r28, r24
     a0c:	d1 1d       	adc	r29, r1
     a0e:	28 81       	ld	r18, Y
     a10:	eb 01       	movw	r28, r22
     a12:	28 83       	st	Y, r18
     a14:	8f 5f       	subi	r24, 0xFF	; 255
     a16:	12 96       	adiw	r26, 0x02	; 2
     a18:	2c 91       	ld	r18, X
     a1a:	12 97       	sbiw	r26, 0x02	; 2
     a1c:	82 23       	and	r24, r18
     a1e:	11 96       	adiw	r26, 0x01	; 1
     a20:	8c 93       	st	X, r24
     a22:	11 97       	sbiw	r26, 0x01	; 1
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 91       	ld	r18, X+
     a28:	3c 91       	ld	r19, X
     a2a:	15 97       	sbiw	r26, 0x05	; 5
     a2c:	21 50       	subi	r18, 0x01	; 1
     a2e:	31 09       	sbc	r19, r1
     a30:	15 96       	adiw	r26, 0x05	; 5
     a32:	3c 93       	st	X, r19
     a34:	2e 93       	st	-X, r18
     a36:	14 97       	sbiw	r26, 0x04	; 4
     a38:	2c 91       	ld	r18, X
     a3a:	82 13       	cpse	r24, r18
     a3c:	0f c0       	rjmp	.+30     	; 0xa5c <Q_getc+0x98>
     a3e:	df 01       	movw	r26, r30
     a40:	aa 0f       	add	r26, r26
     a42:	bb 1f       	adc	r27, r27
     a44:	aa 0f       	add	r26, r26
     a46:	bb 1f       	adc	r27, r27
     a48:	aa 0f       	add	r26, r26
     a4a:	bb 1f       	adc	r27, r27
     a4c:	ac 5b       	subi	r26, 0xBC	; 188
     a4e:	bd 4f       	sbci	r27, 0xFD	; 253
     a50:	13 96       	adiw	r26, 0x03	; 3
     a52:	8c 91       	ld	r24, X
     a54:	13 97       	sbiw	r26, 0x03	; 3
     a56:	82 60       	ori	r24, 0x02	; 2
     a58:	13 96       	adiw	r26, 0x03	; 3
     a5a:	8c 93       	st	X, r24
     a5c:	ee 0f       	add	r30, r30
     a5e:	ff 1f       	adc	r31, r31
     a60:	ee 0f       	add	r30, r30
     a62:	ff 1f       	adc	r31, r31
     a64:	ee 0f       	add	r30, r30
     a66:	ff 1f       	adc	r31, r31
     a68:	ec 5b       	subi	r30, 0xBC	; 188
     a6a:	fd 4f       	sbci	r31, 0xFD	; 253
     a6c:	83 81       	ldd	r24, Z+3	; 0x03
     a6e:	8e 7f       	andi	r24, 0xFE	; 254
     a70:	83 83       	std	Z+3, r24	; 0x03
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     a72:	9f bf       	out	0x3f, r25	; 63
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	01 c0       	rjmp	.+2      	; 0xa7a <Q_getc+0xb6>
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <__vector_26>:
     a80:	1f 92       	push	r1
     a82:	0f 92       	push	r0
     a84:	0f b6       	in	r0, 0x3f	; 63
     a86:	0f 92       	push	r0
     a88:	11 24       	eor	r1, r1
     a8a:	0b b6       	in	r0, 0x3b	; 59
     a8c:	0f 92       	push	r0
     a8e:	2f 93       	push	r18
     a90:	3f 93       	push	r19
     a92:	4f 93       	push	r20
     a94:	5f 93       	push	r21
     a96:	6f 93       	push	r22
     a98:	7f 93       	push	r23
     a9a:	8f 93       	push	r24
     a9c:	9f 93       	push	r25
     a9e:	af 93       	push	r26
     aa0:	bf 93       	push	r27
     aa2:	ef 93       	push	r30
     aa4:	ff 93       	push	r31
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	1f 92       	push	r1
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <serial_port+0x1>
     ab4:	e8 2f       	mov	r30, r24
     ab6:	f0 e0       	ldi	r31, 0x00	; 0
     ab8:	ee 0f       	add	r30, r30
     aba:	ff 1f       	adc	r31, r31
     abc:	ee 0f       	add	r30, r30
     abe:	ff 1f       	adc	r31, r31
     ac0:	ee 0f       	add	r30, r30
     ac2:	ff 1f       	adc	r31, r31
     ac4:	ec 5b       	subi	r30, 0xBC	; 188
     ac6:	fd 4f       	sbci	r31, 0xFD	; 253
     ac8:	93 81       	ldd	r25, Z+3	; 0x03
     aca:	91 ff       	sbrs	r25, 1
     acc:	08 c0       	rjmp	.+16     	; 0xade <__vector_26+0x5e>
     ace:	e0 91 38 02 	lds	r30, 0x0238	; 0x800238 <serialregs>
     ad2:	f0 91 39 02 	lds	r31, 0x0239	; 0x800239 <serialregs+0x1>
     ad6:	81 81       	ldd	r24, Z+1	; 0x01
     ad8:	8f 7d       	andi	r24, 0xDF	; 223
     ada:	81 83       	std	Z+1, r24	; 0x01
     adc:	07 c0       	rjmp	.+14     	; 0xaec <__vector_26+0x6c>
     ade:	be 01       	movw	r22, r28
     ae0:	6f 5f       	subi	r22, 0xFF	; 255
     ae2:	7f 4f       	sbci	r23, 0xFF	; 255
     ae4:	6f df       	rcall	.-290    	; 0x9c4 <Q_getc>
     ae6:	89 81       	ldd	r24, Y+1	; 0x01
     ae8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     aec:	0f 90       	pop	r0
     aee:	df 91       	pop	r29
     af0:	cf 91       	pop	r28
     af2:	ff 91       	pop	r31
     af4:	ef 91       	pop	r30
     af6:	bf 91       	pop	r27
     af8:	af 91       	pop	r26
     afa:	9f 91       	pop	r25
     afc:	8f 91       	pop	r24
     afe:	7f 91       	pop	r23
     b00:	6f 91       	pop	r22
     b02:	5f 91       	pop	r21
     b04:	4f 91       	pop	r20
     b06:	3f 91       	pop	r19
     b08:	2f 91       	pop	r18
     b0a:	0f 90       	pop	r0
     b0c:	0b be       	out	0x3b, r0	; 59
     b0e:	0f 90       	pop	r0
     b10:	0f be       	out	0x3f, r0	; 63
     b12:	0f 90       	pop	r0
     b14:	1f 90       	pop	r1
     b16:	18 95       	reti

00000b18 <__vector_37>:
     b18:	1f 92       	push	r1
     b1a:	0f 92       	push	r0
     b1c:	0f b6       	in	r0, 0x3f	; 63
     b1e:	0f 92       	push	r0
     b20:	11 24       	eor	r1, r1
     b22:	0b b6       	in	r0, 0x3b	; 59
     b24:	0f 92       	push	r0
     b26:	2f 93       	push	r18
     b28:	3f 93       	push	r19
     b2a:	4f 93       	push	r20
     b2c:	5f 93       	push	r21
     b2e:	6f 93       	push	r22
     b30:	7f 93       	push	r23
     b32:	8f 93       	push	r24
     b34:	9f 93       	push	r25
     b36:	af 93       	push	r26
     b38:	bf 93       	push	r27
     b3a:	ef 93       	push	r30
     b3c:	ff 93       	push	r31
     b3e:	cf 93       	push	r28
     b40:	df 93       	push	r29
     b42:	1f 92       	push	r1
     b44:	cd b7       	in	r28, 0x3d	; 61
     b46:	de b7       	in	r29, 0x3e	; 62
     b48:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <serial_port+0xb>
     b4c:	e8 2f       	mov	r30, r24
     b4e:	f0 e0       	ldi	r31, 0x00	; 0
     b50:	ee 0f       	add	r30, r30
     b52:	ff 1f       	adc	r31, r31
     b54:	ee 0f       	add	r30, r30
     b56:	ff 1f       	adc	r31, r31
     b58:	ee 0f       	add	r30, r30
     b5a:	ff 1f       	adc	r31, r31
     b5c:	ec 5b       	subi	r30, 0xBC	; 188
     b5e:	fd 4f       	sbci	r31, 0xFD	; 253
     b60:	93 81       	ldd	r25, Z+3	; 0x03
     b62:	91 ff       	sbrs	r25, 1
     b64:	08 c0       	rjmp	.+16     	; 0xb76 <__vector_37+0x5e>
     b66:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <serialregs+0x2>
     b6a:	f0 91 3b 02 	lds	r31, 0x023B	; 0x80023b <serialregs+0x3>
     b6e:	81 81       	ldd	r24, Z+1	; 0x01
     b70:	8f 7d       	andi	r24, 0xDF	; 223
     b72:	81 83       	std	Z+1, r24	; 0x01
     b74:	07 c0       	rjmp	.+14     	; 0xb84 <__vector_37+0x6c>
     b76:	be 01       	movw	r22, r28
     b78:	6f 5f       	subi	r22, 0xFF	; 255
     b7a:	7f 4f       	sbci	r23, 0xFF	; 255
     b7c:	23 df       	rcall	.-442    	; 0x9c4 <Q_getc>
     b7e:	89 81       	ldd	r24, Y+1	; 0x01
     b80:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	ff 91       	pop	r31
     b8c:	ef 91       	pop	r30
     b8e:	bf 91       	pop	r27
     b90:	af 91       	pop	r26
     b92:	9f 91       	pop	r25
     b94:	8f 91       	pop	r24
     b96:	7f 91       	pop	r23
     b98:	6f 91       	pop	r22
     b9a:	5f 91       	pop	r21
     b9c:	4f 91       	pop	r20
     b9e:	3f 91       	pop	r19
     ba0:	2f 91       	pop	r18
     ba2:	0f 90       	pop	r0
     ba4:	0b be       	out	0x3b, r0	; 59
     ba6:	0f 90       	pop	r0
     ba8:	0f be       	out	0x3f, r0	; 63
     baa:	0f 90       	pop	r0
     bac:	1f 90       	pop	r1
     bae:	18 95       	reti

00000bb0 <__vector_52>:
     bb0:	1f 92       	push	r1
     bb2:	0f 92       	push	r0
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	0f 92       	push	r0
     bb8:	11 24       	eor	r1, r1
     bba:	0b b6       	in	r0, 0x3b	; 59
     bbc:	0f 92       	push	r0
     bbe:	2f 93       	push	r18
     bc0:	3f 93       	push	r19
     bc2:	4f 93       	push	r20
     bc4:	5f 93       	push	r21
     bc6:	6f 93       	push	r22
     bc8:	7f 93       	push	r23
     bca:	8f 93       	push	r24
     bcc:	9f 93       	push	r25
     bce:	af 93       	push	r26
     bd0:	bf 93       	push	r27
     bd2:	ef 93       	push	r30
     bd4:	ff 93       	push	r31
     bd6:	cf 93       	push	r28
     bd8:	df 93       	push	r29
     bda:	1f 92       	push	r1
     bdc:	cd b7       	in	r28, 0x3d	; 61
     bde:	de b7       	in	r29, 0x3e	; 62
     be0:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <serial_port+0x15>
     be4:	e8 2f       	mov	r30, r24
     be6:	f0 e0       	ldi	r31, 0x00	; 0
     be8:	ee 0f       	add	r30, r30
     bea:	ff 1f       	adc	r31, r31
     bec:	ee 0f       	add	r30, r30
     bee:	ff 1f       	adc	r31, r31
     bf0:	ee 0f       	add	r30, r30
     bf2:	ff 1f       	adc	r31, r31
     bf4:	ec 5b       	subi	r30, 0xBC	; 188
     bf6:	fd 4f       	sbci	r31, 0xFD	; 253
     bf8:	93 81       	ldd	r25, Z+3	; 0x03
     bfa:	91 ff       	sbrs	r25, 1
     bfc:	08 c0       	rjmp	.+16     	; 0xc0e <__vector_52+0x5e>
     bfe:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <serialregs+0x4>
     c02:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <serialregs+0x5>
     c06:	81 81       	ldd	r24, Z+1	; 0x01
     c08:	8f 7d       	andi	r24, 0xDF	; 223
     c0a:	81 83       	std	Z+1, r24	; 0x01
     c0c:	07 c0       	rjmp	.+14     	; 0xc1c <__vector_52+0x6c>
     c0e:	be 01       	movw	r22, r28
     c10:	6f 5f       	subi	r22, 0xFF	; 255
     c12:	7f 4f       	sbci	r23, 0xFF	; 255
     c14:	d7 de       	rcall	.-594    	; 0x9c4 <Q_getc>
     c16:	89 81       	ldd	r24, Y+1	; 0x01
     c18:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     c1c:	0f 90       	pop	r0
     c1e:	df 91       	pop	r29
     c20:	cf 91       	pop	r28
     c22:	ff 91       	pop	r31
     c24:	ef 91       	pop	r30
     c26:	bf 91       	pop	r27
     c28:	af 91       	pop	r26
     c2a:	9f 91       	pop	r25
     c2c:	8f 91       	pop	r24
     c2e:	7f 91       	pop	r23
     c30:	6f 91       	pop	r22
     c32:	5f 91       	pop	r21
     c34:	4f 91       	pop	r20
     c36:	3f 91       	pop	r19
     c38:	2f 91       	pop	r18
     c3a:	0f 90       	pop	r0
     c3c:	0b be       	out	0x3b, r0	; 59
     c3e:	0f 90       	pop	r0
     c40:	0f be       	out	0x3f, r0	; 63
     c42:	0f 90       	pop	r0
     c44:	1f 90       	pop	r1
     c46:	18 95       	reti

00000c48 <__vector_55>:
     c48:	1f 92       	push	r1
     c4a:	0f 92       	push	r0
     c4c:	0f b6       	in	r0, 0x3f	; 63
     c4e:	0f 92       	push	r0
     c50:	11 24       	eor	r1, r1
     c52:	0b b6       	in	r0, 0x3b	; 59
     c54:	0f 92       	push	r0
     c56:	2f 93       	push	r18
     c58:	3f 93       	push	r19
     c5a:	4f 93       	push	r20
     c5c:	5f 93       	push	r21
     c5e:	6f 93       	push	r22
     c60:	7f 93       	push	r23
     c62:	8f 93       	push	r24
     c64:	9f 93       	push	r25
     c66:	af 93       	push	r26
     c68:	bf 93       	push	r27
     c6a:	ef 93       	push	r30
     c6c:	ff 93       	push	r31
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	1f 92       	push	r1
     c74:	cd b7       	in	r28, 0x3d	; 61
     c76:	de b7       	in	r29, 0x3e	; 62
     c78:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <serial_port+0x1f>
     c7c:	e8 2f       	mov	r30, r24
     c7e:	f0 e0       	ldi	r31, 0x00	; 0
     c80:	ee 0f       	add	r30, r30
     c82:	ff 1f       	adc	r31, r31
     c84:	ee 0f       	add	r30, r30
     c86:	ff 1f       	adc	r31, r31
     c88:	ee 0f       	add	r30, r30
     c8a:	ff 1f       	adc	r31, r31
     c8c:	ec 5b       	subi	r30, 0xBC	; 188
     c8e:	fd 4f       	sbci	r31, 0xFD	; 253
     c90:	93 81       	ldd	r25, Z+3	; 0x03
     c92:	91 ff       	sbrs	r25, 1
     c94:	08 c0       	rjmp	.+16     	; 0xca6 <__vector_55+0x5e>
     c96:	e0 91 3e 02 	lds	r30, 0x023E	; 0x80023e <serialregs+0x6>
     c9a:	f0 91 3f 02 	lds	r31, 0x023F	; 0x80023f <serialregs+0x7>
     c9e:	81 81       	ldd	r24, Z+1	; 0x01
     ca0:	8f 7d       	andi	r24, 0xDF	; 223
     ca2:	81 83       	std	Z+1, r24	; 0x01
     ca4:	07 c0       	rjmp	.+14     	; 0xcb4 <__vector_55+0x6c>
     ca6:	be 01       	movw	r22, r28
     ca8:	6f 5f       	subi	r22, 0xFF	; 255
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	8b de       	rcall	.-746    	; 0x9c4 <Q_getc>
     cae:	89 81       	ldd	r24, Y+1	; 0x01
     cb0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     cb4:	0f 90       	pop	r0
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	ff 91       	pop	r31
     cbc:	ef 91       	pop	r30
     cbe:	bf 91       	pop	r27
     cc0:	af 91       	pop	r26
     cc2:	9f 91       	pop	r25
     cc4:	8f 91       	pop	r24
     cc6:	7f 91       	pop	r23
     cc8:	6f 91       	pop	r22
     cca:	5f 91       	pop	r21
     ccc:	4f 91       	pop	r20
     cce:	3f 91       	pop	r19
     cd0:	2f 91       	pop	r18
     cd2:	0f 90       	pop	r0
     cd4:	0b be       	out	0x3b, r0	; 59
     cd6:	0f 90       	pop	r0
     cd8:	0f be       	out	0x3f, r0	; 63
     cda:	0f 90       	pop	r0
     cdc:	1f 90       	pop	r1
     cde:	18 95       	reti

00000ce0 <Serial_read>:
     ce0:	cf 93       	push	r28
     ce2:	df 93       	push	r29
     ce4:	1f 92       	push	r1
     ce6:	1f 92       	push	r1
     ce8:	cd b7       	in	r28, 0x3d	; 61
     cea:	de b7       	in	r29, 0x3e	; 62
     cec:	fc 01       	movw	r30, r24
     cee:	ee 0f       	add	r30, r30
     cf0:	ff 1f       	adc	r31, r31
     cf2:	88 0f       	add	r24, r24
     cf4:	99 1f       	adc	r25, r25
     cf6:	88 0f       	add	r24, r24
     cf8:	99 1f       	adc	r25, r25
     cfa:	88 0f       	add	r24, r24
     cfc:	99 1f       	adc	r25, r25
     cfe:	e8 0f       	add	r30, r24
     d00:	f9 1f       	adc	r31, r25
     d02:	e0 5f       	subi	r30, 0xF0	; 240
     d04:	fd 4f       	sbci	r31, 0xFD	; 253
     d06:	80 81       	ld	r24, Z
     d08:	e8 2f       	mov	r30, r24
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	ee 0f       	add	r30, r30
     d0e:	ff 1f       	adc	r31, r31
     d10:	ee 0f       	add	r30, r30
     d12:	ff 1f       	adc	r31, r31
     d14:	ee 0f       	add	r30, r30
     d16:	ff 1f       	adc	r31, r31
     d18:	ec 5b       	subi	r30, 0xBC	; 188
     d1a:	fd 4f       	sbci	r31, 0xFD	; 253
     d1c:	24 81       	ldd	r18, Z+4	; 0x04
     d1e:	35 81       	ldd	r19, Z+5	; 0x05
     d20:	12 16       	cp	r1, r18
     d22:	13 06       	cpc	r1, r19
     d24:	4c f4       	brge	.+18     	; 0xd38 <Serial_read+0x58>
     d26:	1a 82       	std	Y+2, r1	; 0x02
     d28:	19 82       	std	Y+1, r1	; 0x01
     d2a:	be 01       	movw	r22, r28
     d2c:	6f 5f       	subi	r22, 0xFF	; 255
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	49 de       	rcall	.-878    	; 0x9c4 <Q_getc>
     d32:	89 81       	ldd	r24, Y+1	; 0x01
     d34:	9a 81       	ldd	r25, Y+2	; 0x02
     d36:	02 c0       	rjmp	.+4      	; 0xd3c <Serial_read+0x5c>
     d38:	8f ef       	ldi	r24, 0xFF	; 255
     d3a:	9f ef       	ldi	r25, 0xFF	; 255
     d3c:	0f 90       	pop	r0
     d3e:	0f 90       	pop	r0
     d40:	df 91       	pop	r29
     d42:	cf 91       	pop	r28
     d44:	08 95       	ret

00000d46 <Q_putc>:
     d46:	cf 93       	push	r28
     d48:	df 93       	push	r29
     d4a:	e8 2f       	mov	r30, r24
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	df 01       	movw	r26, r30
     d50:	aa 0f       	add	r26, r26
     d52:	bb 1f       	adc	r27, r27
     d54:	aa 0f       	add	r26, r26
     d56:	bb 1f       	adc	r27, r27
     d58:	aa 0f       	add	r26, r26
     d5a:	bb 1f       	adc	r27, r27
     d5c:	ac 5b       	subi	r26, 0xBC	; 188
     d5e:	bd 4f       	sbci	r27, 0xFD	; 253
     d60:	13 96       	adiw	r26, 0x03	; 3
     d62:	8c 91       	ld	r24, X
     d64:	80 fd       	sbrc	r24, 0
     d66:	44 c0       	rjmp	.+136    	; 0xdf0 <Q_putc+0xaa>
     d68:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     d6a:	f8 94       	cli
     d6c:	df 01       	movw	r26, r30
     d6e:	aa 0f       	add	r26, r26
     d70:	bb 1f       	adc	r27, r27
     d72:	aa 0f       	add	r26, r26
     d74:	bb 1f       	adc	r27, r27
     d76:	aa 0f       	add	r26, r26
     d78:	bb 1f       	adc	r27, r27
     d7a:	ac 5b       	subi	r26, 0xBC	; 188
     d7c:	bd 4f       	sbci	r27, 0xFD	; 253
     d7e:	8c 91       	ld	r24, X
     d80:	16 96       	adiw	r26, 0x06	; 6
     d82:	cd 91       	ld	r28, X+
     d84:	dc 91       	ld	r29, X
     d86:	17 97       	sbiw	r26, 0x07	; 7
     d88:	c8 0f       	add	r28, r24
     d8a:	d1 1d       	adc	r29, r1
     d8c:	68 83       	st	Y, r22
     d8e:	8f 5f       	subi	r24, 0xFF	; 255
     d90:	12 96       	adiw	r26, 0x02	; 2
     d92:	2c 91       	ld	r18, X
     d94:	12 97       	sbiw	r26, 0x02	; 2
     d96:	82 23       	and	r24, r18
     d98:	8c 93       	st	X, r24
     d9a:	14 96       	adiw	r26, 0x04	; 4
     d9c:	2d 91       	ld	r18, X+
     d9e:	3c 91       	ld	r19, X
     da0:	15 97       	sbiw	r26, 0x05	; 5
     da2:	2f 5f       	subi	r18, 0xFF	; 255
     da4:	3f 4f       	sbci	r19, 0xFF	; 255
     da6:	15 96       	adiw	r26, 0x05	; 5
     da8:	3c 93       	st	X, r19
     daa:	2e 93       	st	-X, r18
     dac:	14 97       	sbiw	r26, 0x04	; 4
     dae:	11 96       	adiw	r26, 0x01	; 1
     db0:	2c 91       	ld	r18, X
     db2:	82 13       	cpse	r24, r18
     db4:	0f c0       	rjmp	.+30     	; 0xdd4 <Q_putc+0x8e>
     db6:	df 01       	movw	r26, r30
     db8:	aa 0f       	add	r26, r26
     dba:	bb 1f       	adc	r27, r27
     dbc:	aa 0f       	add	r26, r26
     dbe:	bb 1f       	adc	r27, r27
     dc0:	aa 0f       	add	r26, r26
     dc2:	bb 1f       	adc	r27, r27
     dc4:	ac 5b       	subi	r26, 0xBC	; 188
     dc6:	bd 4f       	sbci	r27, 0xFD	; 253
     dc8:	13 96       	adiw	r26, 0x03	; 3
     dca:	8c 91       	ld	r24, X
     dcc:	13 97       	sbiw	r26, 0x03	; 3
     dce:	81 60       	ori	r24, 0x01	; 1
     dd0:	13 96       	adiw	r26, 0x03	; 3
     dd2:	8c 93       	st	X, r24
     dd4:	ee 0f       	add	r30, r30
     dd6:	ff 1f       	adc	r31, r31
     dd8:	ee 0f       	add	r30, r30
     dda:	ff 1f       	adc	r31, r31
     ddc:	ee 0f       	add	r30, r30
     dde:	ff 1f       	adc	r31, r31
     de0:	ec 5b       	subi	r30, 0xBC	; 188
     de2:	fd 4f       	sbci	r31, 0xFD	; 253
     de4:	83 81       	ldd	r24, Z+3	; 0x03
     de6:	8d 7f       	andi	r24, 0xFD	; 253
     de8:	83 83       	std	Z+3, r24	; 0x03
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     dea:	9f bf       	out	0x3f, r25	; 63
     dec:	81 e0       	ldi	r24, 0x01	; 1
     dee:	01 c0       	rjmp	.+2      	; 0xdf2 <Q_putc+0xac>
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	df 91       	pop	r29
     df4:	cf 91       	pop	r28
     df6:	08 95       	ret

00000df8 <__vector_25>:
     df8:	1f 92       	push	r1
     dfa:	0f 92       	push	r0
     dfc:	0f b6       	in	r0, 0x3f	; 63
     dfe:	0f 92       	push	r0
     e00:	11 24       	eor	r1, r1
     e02:	0b b6       	in	r0, 0x3b	; 59
     e04:	0f 92       	push	r0
     e06:	2f 93       	push	r18
     e08:	3f 93       	push	r19
     e0a:	4f 93       	push	r20
     e0c:	5f 93       	push	r21
     e0e:	6f 93       	push	r22
     e10:	7f 93       	push	r23
     e12:	8f 93       	push	r24
     e14:	9f 93       	push	r25
     e16:	af 93       	push	r26
     e18:	bf 93       	push	r27
     e1a:	ef 93       	push	r30
     e1c:	ff 93       	push	r31
     e1e:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     e22:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <serial_port>
     e26:	8f df       	rcall	.-226    	; 0xd46 <Q_putc>
     e28:	ff 91       	pop	r31
     e2a:	ef 91       	pop	r30
     e2c:	bf 91       	pop	r27
     e2e:	af 91       	pop	r26
     e30:	9f 91       	pop	r25
     e32:	8f 91       	pop	r24
     e34:	7f 91       	pop	r23
     e36:	6f 91       	pop	r22
     e38:	5f 91       	pop	r21
     e3a:	4f 91       	pop	r20
     e3c:	3f 91       	pop	r19
     e3e:	2f 91       	pop	r18
     e40:	0f 90       	pop	r0
     e42:	0b be       	out	0x3b, r0	; 59
     e44:	0f 90       	pop	r0
     e46:	0f be       	out	0x3f, r0	; 63
     e48:	0f 90       	pop	r0
     e4a:	1f 90       	pop	r1
     e4c:	18 95       	reti

00000e4e <__vector_36>:
     e4e:	1f 92       	push	r1
     e50:	0f 92       	push	r0
     e52:	0f b6       	in	r0, 0x3f	; 63
     e54:	0f 92       	push	r0
     e56:	11 24       	eor	r1, r1
     e58:	0b b6       	in	r0, 0x3b	; 59
     e5a:	0f 92       	push	r0
     e5c:	2f 93       	push	r18
     e5e:	3f 93       	push	r19
     e60:	4f 93       	push	r20
     e62:	5f 93       	push	r21
     e64:	6f 93       	push	r22
     e66:	7f 93       	push	r23
     e68:	8f 93       	push	r24
     e6a:	9f 93       	push	r25
     e6c:	af 93       	push	r26
     e6e:	bf 93       	push	r27
     e70:	ef 93       	push	r30
     e72:	ff 93       	push	r31
     e74:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     e78:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <serial_port+0xa>
     e7c:	64 df       	rcall	.-312    	; 0xd46 <Q_putc>
     e7e:	ff 91       	pop	r31
     e80:	ef 91       	pop	r30
     e82:	bf 91       	pop	r27
     e84:	af 91       	pop	r26
     e86:	9f 91       	pop	r25
     e88:	8f 91       	pop	r24
     e8a:	7f 91       	pop	r23
     e8c:	6f 91       	pop	r22
     e8e:	5f 91       	pop	r21
     e90:	4f 91       	pop	r20
     e92:	3f 91       	pop	r19
     e94:	2f 91       	pop	r18
     e96:	0f 90       	pop	r0
     e98:	0b be       	out	0x3b, r0	; 59
     e9a:	0f 90       	pop	r0
     e9c:	0f be       	out	0x3f, r0	; 63
     e9e:	0f 90       	pop	r0
     ea0:	1f 90       	pop	r1
     ea2:	18 95       	reti

00000ea4 <__vector_51>:
     ea4:	1f 92       	push	r1
     ea6:	0f 92       	push	r0
     ea8:	0f b6       	in	r0, 0x3f	; 63
     eaa:	0f 92       	push	r0
     eac:	11 24       	eor	r1, r1
     eae:	0b b6       	in	r0, 0x3b	; 59
     eb0:	0f 92       	push	r0
     eb2:	2f 93       	push	r18
     eb4:	3f 93       	push	r19
     eb6:	4f 93       	push	r20
     eb8:	5f 93       	push	r21
     eba:	6f 93       	push	r22
     ebc:	7f 93       	push	r23
     ebe:	8f 93       	push	r24
     ec0:	9f 93       	push	r25
     ec2:	af 93       	push	r26
     ec4:	bf 93       	push	r27
     ec6:	ef 93       	push	r30
     ec8:	ff 93       	push	r31
     eca:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     ece:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <serial_port+0x14>
     ed2:	39 df       	rcall	.-398    	; 0xd46 <Q_putc>
     ed4:	ff 91       	pop	r31
     ed6:	ef 91       	pop	r30
     ed8:	bf 91       	pop	r27
     eda:	af 91       	pop	r26
     edc:	9f 91       	pop	r25
     ede:	8f 91       	pop	r24
     ee0:	7f 91       	pop	r23
     ee2:	6f 91       	pop	r22
     ee4:	5f 91       	pop	r21
     ee6:	4f 91       	pop	r20
     ee8:	3f 91       	pop	r19
     eea:	2f 91       	pop	r18
     eec:	0f 90       	pop	r0
     eee:	0b be       	out	0x3b, r0	; 59
     ef0:	0f 90       	pop	r0
     ef2:	0f be       	out	0x3f, r0	; 63
     ef4:	0f 90       	pop	r0
     ef6:	1f 90       	pop	r1
     ef8:	18 95       	reti

00000efa <__vector_54>:
     efa:	1f 92       	push	r1
     efc:	0f 92       	push	r0
     efe:	0f b6       	in	r0, 0x3f	; 63
     f00:	0f 92       	push	r0
     f02:	11 24       	eor	r1, r1
     f04:	0b b6       	in	r0, 0x3b	; 59
     f06:	0f 92       	push	r0
     f08:	2f 93       	push	r18
     f0a:	3f 93       	push	r19
     f0c:	4f 93       	push	r20
     f0e:	5f 93       	push	r21
     f10:	6f 93       	push	r22
     f12:	7f 93       	push	r23
     f14:	8f 93       	push	r24
     f16:	9f 93       	push	r25
     f18:	af 93       	push	r26
     f1a:	bf 93       	push	r27
     f1c:	ef 93       	push	r30
     f1e:	ff 93       	push	r31
     f20:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     f24:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <serial_port+0x1e>
     f28:	0e df       	rcall	.-484    	; 0xd46 <Q_putc>
     f2a:	ff 91       	pop	r31
     f2c:	ef 91       	pop	r30
     f2e:	bf 91       	pop	r27
     f30:	af 91       	pop	r26
     f32:	9f 91       	pop	r25
     f34:	8f 91       	pop	r24
     f36:	7f 91       	pop	r23
     f38:	6f 91       	pop	r22
     f3a:	5f 91       	pop	r21
     f3c:	4f 91       	pop	r20
     f3e:	3f 91       	pop	r19
     f40:	2f 91       	pop	r18
     f42:	0f 90       	pop	r0
     f44:	0b be       	out	0x3b, r0	; 59
     f46:	0f 90       	pop	r0
     f48:	0f be       	out	0x3f, r0	; 63
     f4a:	0f 90       	pop	r0
     f4c:	1f 90       	pop	r1
     f4e:	18 95       	reti

00000f50 <Serial_write>:
     f50:	ef 92       	push	r14
     f52:	ff 92       	push	r15
     f54:	0f 93       	push	r16
     f56:	1f 93       	push	r17
     f58:	cf 93       	push	r28
     f5a:	df 93       	push	r29
     f5c:	8c 01       	movw	r16, r24
     f5e:	f6 2e       	mov	r15, r22
     f60:	fc 01       	movw	r30, r24
     f62:	ee 0f       	add	r30, r30
     f64:	ff 1f       	adc	r31, r31
     f66:	88 0f       	add	r24, r24
     f68:	99 1f       	adc	r25, r25
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	88 0f       	add	r24, r24
     f70:	99 1f       	adc	r25, r25
     f72:	e8 0f       	add	r30, r24
     f74:	f9 1f       	adc	r31, r25
     f76:	e0 5f       	subi	r30, 0xF0	; 240
     f78:	fd 4f       	sbci	r31, 0xFD	; 253
     f7a:	e1 80       	ldd	r14, Z+1	; 0x01
     f7c:	ce 2d       	mov	r28, r14
     f7e:	d0 e0       	ldi	r29, 0x00	; 0
     f80:	fe 01       	movw	r30, r28
     f82:	ee 0f       	add	r30, r30
     f84:	ff 1f       	adc	r31, r31
     f86:	ee 0f       	add	r30, r30
     f88:	ff 1f       	adc	r31, r31
     f8a:	ee 0f       	add	r30, r30
     f8c:	ff 1f       	adc	r31, r31
     f8e:	ec 5b       	subi	r30, 0xBC	; 188
     f90:	fd 4f       	sbci	r31, 0xFD	; 253
     f92:	83 81       	ldd	r24, Z+3	; 0x03
     f94:	80 ff       	sbrs	r24, 0
     f96:	23 c0       	rjmp	.+70     	; 0xfde <Serial_write+0x8e>
     f98:	f8 01       	movw	r30, r16
     f9a:	ee 0f       	add	r30, r30
     f9c:	ff 1f       	adc	r31, r31
     f9e:	e8 5c       	subi	r30, 0xC8	; 200
     fa0:	fd 4f       	sbci	r31, 0xFD	; 253
     fa2:	01 90       	ld	r0, Z+
     fa4:	f0 81       	ld	r31, Z
     fa6:	e0 2d       	mov	r30, r0
     fa8:	81 81       	ldd	r24, Z+1	; 0x01
     faa:	80 62       	ori	r24, 0x20	; 32
     fac:	81 83       	std	Z+1, r24	; 0x01
     fae:	fe 01       	movw	r30, r28
     fb0:	ee 0f       	add	r30, r30
     fb2:	ff 1f       	adc	r31, r31
     fb4:	ee 0f       	add	r30, r30
     fb6:	ff 1f       	adc	r31, r31
     fb8:	ee 0f       	add	r30, r30
     fba:	ff 1f       	adc	r31, r31
     fbc:	ec 5b       	subi	r30, 0xBC	; 188
     fbe:	fd 4f       	sbci	r31, 0xFD	; 253
     fc0:	83 81       	ldd	r24, Z+3	; 0x03
     fc2:	80 ff       	sbrs	r24, 0
     fc4:	0c c0       	rjmp	.+24     	; 0xfde <Serial_write+0x8e>
     fc6:	cc 0f       	add	r28, r28
     fc8:	dd 1f       	adc	r29, r29
     fca:	cc 0f       	add	r28, r28
     fcc:	dd 1f       	adc	r29, r29
     fce:	cc 0f       	add	r28, r28
     fd0:	dd 1f       	adc	r29, r29
     fd2:	c9 5b       	subi	r28, 0xB9	; 185
     fd4:	dd 4f       	sbci	r29, 0xFD	; 253
     fd6:	a6 d8       	rcall	.-3764   	; 0x124 <x_yield>
     fd8:	98 81       	ld	r25, Y
     fda:	90 fd       	sbrc	r25, 0
     fdc:	fc cf       	rjmp	.-8      	; 0xfd6 <Serial_write+0x86>
     fde:	6f 2d       	mov	r22, r15
     fe0:	8e 2d       	mov	r24, r14
     fe2:	b1 de       	rcall	.-670    	; 0xd46 <Q_putc>
     fe4:	00 0f       	add	r16, r16
     fe6:	11 1f       	adc	r17, r17
     fe8:	f8 01       	movw	r30, r16
     fea:	e8 5c       	subi	r30, 0xC8	; 200
     fec:	fd 4f       	sbci	r31, 0xFD	; 253
     fee:	01 90       	ld	r0, Z+
     ff0:	f0 81       	ld	r31, Z
     ff2:	e0 2d       	mov	r30, r0
     ff4:	81 81       	ldd	r24, Z+1	; 0x01
     ff6:	80 62       	ori	r24, 0x20	; 32
     ff8:	81 83       	std	Z+1, r24	; 0x01
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	df 91       	pop	r29
    1000:	cf 91       	pop	r28
    1002:	1f 91       	pop	r17
    1004:	0f 91       	pop	r16
    1006:	ff 90       	pop	r15
    1008:	ef 90       	pop	r14
    100a:	08 95       	ret

0000100c <_exit>:
    100c:	f8 94       	cli

0000100e <__stop_program>:
    100e:	ff cf       	rjmp	.-2      	; 0x100e <__stop_program>
